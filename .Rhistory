df.sum$learning_category_according_to_etheredge_full_4_minutes[i] <- NA}
else if(df.sum$number_of_medians_above_60_using_full_4_minutes_data[i] <1){
df.sum$learning_category_according_to_etheredge_full_4_minutes[i] <- "non"}
else if(df.sum$number_of_medians_above_60_using_full_4_minutes_data[i] >0){
if(is.na(df.sum$was_average_performance_significantly_different_from_0.5_full_4_minutes_p_value_of_either_t_test_or_wilcox[i]) == TRUE){
df.sum$learning_category_according_to_etheredge_full_4_minutes[i] <- NA}
else if(df.sum$was_average_performance_significantly_different_from_0.5_full_4_minutes_p_value_of_either_t_test_or_wilcox[i] <0.05){
df.sum$learning_category_according_to_etheredge_full_4_minutes[i] <- "high"}
else{
df.sum$learning_category_according_to_etheredge_full_4_minutes[i] <- "low"}
}
}
for(i in 1:length(fish_list)){
df.fish<- filter(df, fishname == fish_list[i])
df.sum$average_latency_to_enter_correct_side[i]<- mean(df.fish$latency_enter_corr, na.rm =TRUE)
}
for(i in 1:length(fish_list)){
df.fish<- filter(df, fishname == fish_list[i])
df.sum$average_latency_to_enter_incorrect_side[i]<- mean(df.fish$latency_enter_incorr, na.rm =TRUE)
}
for(i in 1:length(fish_list)){
df.fish<- filter(df, fishname == fish_list[i])
df.fish.correct<-filter(df.fish, df.fish$screen_entered_first == "correct")
number_correct<-nrow(df.fish.correct)
df.fish.incorrect<-filter(df.fish, df.fish$screen_entered_first == "incorrect")
number_incorrect<-nrow(df.fish.incorrect)
df.sum$proportion_of_correct_first_choices[i]<- number_correct/(number_incorrect+ number_correct)
}
for(j in 1:nrow(df.sum)){
#print(j)
df.fish<- filter(df, fishname == fish_list[j])
df.fish[, c(12, 13)] <- sapply(df.fish[, c(12,13)], as.numeric)
df.fish<- df.fish[order(df.fish$day, df.fish$trial),]
countlist_full_4_minutes <- vector(length=9)
countlist_T30_to_T50 <- vector(length=9)
countlist_correct_choice_first <- vector(length=9)
countlist_full_4_minutes[1] <- 0
countlist_T30_to_T50[1] <- 0
countlist_correct_choice_first[1] <- 0
for(i in 1:nrow(df.fish)){
if (is.na(df.fish$perf_greater_than_60_full_4_minutes[i]) == TRUE){
if(i == 1){
countlist_full_4_minutes[i]<- 0}
else{
countlist_full_4_minutes[i]<- countlist_full_4_minutes[i-1]}}
else if (df.fish$perf_greater_than_60_full_4_minutes[i] == 1){
if(i == 1){
countlist_full_4_minutes[i]<- 1}
else{
countlist_full_4_minutes[i]<- countlist_full_4_minutes[i-1] + 1}}
else if (df.fish$perf_greater_than_60_full_4_minutes[i] == 0){
countlist_full_4_minutes[i]<- 0}
}
for(i in 1:nrow(df.fish)){
if (is.na(df.fish$perf_greater_than_60_T30_to_T50[i]) == TRUE){
if(i == 1){
countlist_T30_to_T50[i]<- 0}
else{
countlist_T30_to_T50[i]<- countlist_T30_to_T50[i-1]}}
else if (df.fish$perf_greater_than_60_T30_to_T50[i] == 1){
if(i == 1){
countlist_T30_to_T50[i]<- 1}
else{
countlist_T30_to_T50[i]<- countlist_T30_to_T50[i-1] + 1}}
else if (df.fish$perf_greater_than_60_T30_to_T50[i] == 0){
countlist_T30_to_T50[i]<- 0}
}
for(i in 1:nrow(df.fish)){
if (is.na(df.fish$screen_entered_first[i]) == TRUE){
if(i == 1){
countlist_correct_choice_first[i]<- 0}
else{
countlist_correct_choice_first[i]<- countlist_correct_choice_first[i-1]}}
else if (df.fish$screen_entered_first[i] == 'incorrect'){
countlist_correct_choice_first[i]<- 0}
else if (df.fish$screen_entered_first[i] == 'correct'){
if(i == 1){
countlist_correct_choice_first[i]<- 1}
else{
countlist_correct_choice_first[i]<- countlist_correct_choice_first[i-1] + 1}}
}
streak.full_4_minutes<-max(countlist_full_4_minutes)
streak.T30_to_T50<-max(countlist_T30_to_T50)
streak.correct_choice_first<- max(countlist_correct_choice_first)
df.sum$number_of_trials_in_a_row_greater_than_60_percent_full_4_minutes[j] <- streak.full_4_minutes
df.sum$number_of_trials_in_a_row_greater_than_60_percent_T30_to_T50[j] <- streak.T30_to_T50
df.sum$number_of_trials_in_a_row_correct_choice_first[j] <- streak.correct_choice_first
#browser()
#print(df.fish$fishname[1])
#print(countlist_full_4_minutes)
#print(streak.full_4_minutes)
#print(countlist_T30_to_T50)
#print(streak.T30_to_T50)
#print(countlist_correct_choice_first)
#print(streak.correct_choice_first)
}
for(i in 1:nrow(df.sum)){
df.sum$mean_of_median_performance_on_each_ratio_full_four_minutes_data[i] <- mean(c(df.sum$median_performance_on_0.50_ratio_using_full_4_minutes_data[i],df.sum$median_performance_on_0.67_ratio_using_full_4_minutes_data[i], df.sum$median_performance_on_0.75_ratio_using_full_4_minutes_data[i]), na.rm = TRUE)
df.sum$mean_of_median_performance_on_each_ratio_T30_to_T50_data[i] <- mean(c(df.sum$median_performance_on_0.50_ratio_using_T30_to_T50_data[i],df.sum$median_performance_on_0.67_ratio_using_T30_to_T50_data[i], df.sum$median_performance_on_0.75_ratio_using_T30_to_T50_data[i]), na.rm = TRUE)
}
write_csv(df.sum, "Numerosity Comparative Cognition Full Dataset April_10_2018.csv")
colnames(det)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(rmarkdown)
library(knitr)
library(readr)
library(utils)
library(EnvStats)
df<- read_csv("C:/Users/Kelly/Desktop/Grad School/Cummings Lab/Comparative Cognition/Comparative Cognition R Scripts/Numerosity Comparative Cognition Full Dataset April_10_2018.csv", col_names = TRUE, col_types = NULL)
View(df)
det<- read_csv("C:/Users/Kelly/Desktop/Grad School/Cummings Lab/Comparative Cognition/Detour/detour_data_for_R_April_5_2018.csv", col_names = TRUE, col_types = NULL)
View(det)
df.full<- full_join(df,det, by = 'fish_name')
df.full
df.full<-df.full %>% mutate(detour_trial_1_solved_code = detour_trial_1_did_fish_solve_barrier_problem + detour_trial_1_did_fish_solve_full_social_problem )
df.full$detour_trial_1_did_fish_solve_barrier_problem <-as.character(df.full$detour_trial_1_did_fish_solve_barrier_problem)
df.full$detour_trial_1_did_fish_solve_full_social_problem <-as.character(df.full$detour_trial_1_did_fish_solve_full_social_problem)
df.full<-df.full %>% mutate(detour_trial_1_latency_to_enter_reward_following_barrier_solution = detour_trial_1_full_problem_time_to_social_reward_minus_time_to_contact_barrier- detour_trial_1_barrier_problem_time_around_barrier_minus_time_to_contact_barrier)
#Note winthrop is removed because his detour trial 1 video started with fish in reward
#OPTIONAL WRITE OUT FULL CSV
#write_csv(df.full, filename = "Comparative Cognition Full Dataset Including Detour March_21_2017")
#Does prop time in social reward following full social problem solution predict latenty to solve full social problem?
mod<- lm(df.full$detour_trial_1_full_problem_time_to_social_reward_minus_time_to_contact_barrier ~ df.full$detour_trial_1_prop_time_in_social_reward_following_solution, na.rm = TRUE)
summary(mod)
number <- df.full %>% filter(!is.na(detour_trial_1_prop_time_in_social_reward_following_solution)) %>% filter(!is.na(detour_trial_1_full_problem_time_to_social_reward_minus_time_to_contact_barrier)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df.full, aes(detour_trial_1_prop_time_in_social_reward_following_solution, detour_trial_1_full_problem_time_to_social_reward_minus_time_to_contact_barrier))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=300, y=100, label= glue::glue("p = {round(p_value,8)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
ggtitle ("Does latency to solve barrier problem predict
latency to enter reward zone following barrier solution?") +
geom_smooth(method = "lm")
mod<- lm(df.full$detour_trial_1_full_problem_time_to_social_reward_minus_time_to_contact_barrier ~ df.full$detour_trial_1_prop_time_in_social_reward_following_solution, na.rm = TRUE)
summary(mod)
number <- df.full %>% filter(!is.na(detour_trial_1_prop_time_in_social_reward_following_solution)) %>% filter(!is.na(detour_trial_1_full_problem_time_to_social_reward_minus_time_to_contact_barrier)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df.full, aes(detour_trial_1_prop_time_in_social_reward_following_solution, detour_trial_1_full_problem_time_to_social_reward_minus_time_to_contact_barrier))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=0, y=100, label= glue::glue("p = {round(p_value,8)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
ggtitle ("Does latency to solve barrier problem predict
latency to enter reward zone following barrier solution?") +
geom_smooth(method = "lm")
mod<- lm(df.full$detour_trial_1_full_problem_time_to_social_reward_minus_time_to_contact_barrier ~ df.full$detour_trial_1_prop_time_in_social_reward_following_solution, na.rm = TRUE)
summary(mod)
number <- df.full %>% filter(!is.na(detour_trial_1_prop_time_in_social_reward_following_solution)) %>% filter(!is.na(detour_trial_1_full_problem_time_to_social_reward_minus_time_to_contact_barrier)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df.full, aes(detour_trial_1_prop_time_in_social_reward_following_solution, detour_trial_1_full_problem_time_to_social_reward_minus_time_to_contact_barrier))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=0.8, y=100, label= glue::glue("p = {round(p_value,8)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
ggtitle ("Does latency to solve barrier problem predict
latency to enter reward zone following barrier solution?") +
geom_smooth(method = "lm")
mod<- lm(df.full$detour_trial_1_full_problem_time_to_social_reward_minus_time_to_contact_barrier ~ df.full$detour_trial_1_prop_time_in_social_reward_following_solution, na.rm = TRUE)
summary(mod)
number <- df.full %>% filter(!is.na(detour_trial_1_prop_time_in_social_reward_following_solution)) %>% filter(!is.na(detour_trial_1_full_problem_time_to_social_reward_minus_time_to_contact_barrier)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df.full, aes(detour_trial_1_prop_time_in_social_reward_following_solution, detour_trial_1_full_problem_time_to_social_reward_minus_time_to_contact_barrier))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=0.7, y=100, label= glue::glue("p = {round(p_value,8)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
ggtitle ("Does latency to solve barrier problem predict
latency to enter reward zone following barrier solution?") +
geom_smooth(method = "lm")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(rmarkdown)
library(knitr)
library(readr)
library(utils)
library(EnvStats)
shuttle<-read.csv("C:/Users/Kelly/Desktop/Grad School/Cummings Lab/Comparative Cognition/Shuttlebox/shuttlebox_data_april_11_2018.csv", col_names = TRUE, col_types = NULL)
shuttle<-read.csv("C:/Users/Kelly/Desktop/Grad School/Cummings Lab/Comparative Cognition/Shuttlebox/shuttlebox_data_april_11_2018.csv")
det<-read.csv("C:/Users/Kelly/Desktop/Grad School/Cummings Lab/Comparative Cognition/Detour/detour_data_for_R_April_5_2018.csv")
num<-read.csv("C:/Users/Kelly/Desktop/Grad School/Cummings Lab/Comparative Cognition/Comparative COgnition R Scripts/Numerosity Comparative COgnition Full Dataset April_10_2018.csv.csv")
num<-read.csv("C:/Users/Kelly/Desktop/Grad School/Cummings Lab/Comparative Cognition/Comparative COgnition R Scripts/Numerosity Comparative Cognition Full Dataset April_10_2018.csv.csv")
num<-read.csv("C:/Users/Kelly/Desktop/Grad School/Cummings Lab/Comparative Cognition/Comparative COgnition R Scripts/Numerosity Comparative Cognition Full Dataset April_10_2018.csv")
colnames(shuttle)
colnames(det)
dolnames(num)
colnames(num)
shuttle<-read.csv("C:/Users/Kelly/Desktop/Grad School/Cummings Lab/Comparative Cognition/Shuttlebox/shuttlebox_data_april_11_2018.csv")
df.full<- inner_join(shuttle,det, by = 'fish_name')
df.full
View(df.full)
df.full<- inner_join(det,shuttle, by = 'fish_name')
View(df.full)
df.full<- left_join(det,shuttle, by = 'fish_name')
View(df.full)
df.full<- left_join(df.full,num, by = 'fish_name')
View(df.full)
write_csv(df.full, 'Full_Comparative_Cognition_Data_DEtour_Shuttlebox_Numerosity_April_12_2018.csv')
write_csv(df.full, 'Full_Comparative_Cognition_Data_Detour_Shuttlebox_Numerosity_April_12_2018.csv')
write_csv(df.full, 'Full_Comparative_Cognition_Data_Detour_Shuttlebox_Numerosity_April_12_2018.csv')
colnames(shuttle)
colnames(det)
colnames(num)
test<-t.test(df.full$shuttlebox_average_distance_from_correct_stimulus_during_gaps~df.full$detour_trial_1_did_fish_solve_barrier_problem)
p_value<- test %>% broom::tidy() %>% select(p.value) %>% unlist
p <- ggplot(df.full, aes(x=detour_trial_1_did_fish_solve_barrier_problem, y=shuttlebox_average_distance_from_correct_stimulus_during_gaps)) +
geom_boxplot()+ stat_n_text() +
ggtitle('#Do fish that solve the detour barrier problem have lower average distances from the correct side in shuttlebox?') +
geom_text(x=1, y=0.1, label= glue::glue("p (t.test) = {round(p_value,4)}"), size = 6, color = "black")
p
df.full$detour_trial_1_did_fish_solve_barrier_problem <-as.character(df.full$detour_trial_1_did_fish_solve_barrier_problem)
test<-t.test(df.full$shuttlebox_average_distance_from_correct_stimulus_during_gaps~df.full$detour_trial_1_did_fish_solve_barrier_problem)
p_value<- test %>% broom::tidy() %>% select(p.value) %>% unlist
p <- ggplot(df.full, aes(x=detour_trial_1_did_fish_solve_barrier_problem, y=shuttlebox_average_distance_from_correct_stimulus_during_gaps)) +
geom_boxplot()+ stat_n_text() +
ggtitle('#Do fish that solve the detour barrier problem have lower average distances from the correct side in shuttlebox?') +
geom_text(x=1, y=0.1, label= glue::glue("p (t.test) = {round(p_value,4)}"), size = 6, color = "black")
p
test<-t.test(df.full$shuttlebox_average_distance_from_correct_stimulus_during_gaps~df.full$detour_trial_1_did_fish_solve_barrier_problem)
p_value<- test %>% broom::tidy() %>% select(p.value) %>% unlist
p <- ggplot(df.full, aes(x=detour_trial_1_did_fish_solve_barrier_problem, y=shuttlebox_average_distance_from_correct_stimulus_during_gaps)) +
geom_boxplot()+ stat_n_text() +
ggtitle('#Do fish that solve the detour barrier problem have lower average distances from the correct side in shuttlebox?') +
geom_text(x=0.5, y=590, label= glue::glue("p (t.test) = {round(p_value,4)}"), size = 6, color = "black")
p
p <- ggplot(df.full, aes(x=detour_trial_1_did_fish_solve_barrier_problem, y=shuttlebox_average_distance_from_correct_stimulus_during_gaps)) +
geom_boxplot()+ stat_n_text() +
ggtitle('#Do fish that solve the detour barrier problem have lower average distances from the correct side in shuttlebox?') +
geom_text(x=1, y=590, label= glue::glue("p (t.test) = {round(p_value,4)}"), size = 6, color = "black")
p
p <- ggplot(df.full, aes(x=detour_trial_1_did_fish_solve_barrier_problem, y=shuttlebox_average_distance_from_correct_stimulus_during_gaps)) +
geom_boxplot()+ stat_n_text() +
ggtitle('#Do fish that solve the detour barrier problem have
lower average distances from the correct side in shuttlebox?') +
geom_text(x=1, y=590, label= glue::glue("p (t.test) = {round(p_value,4)}"), size = 6, color = "black")
p
test<-t.test(df.full$shuttlebox_average_distance_from_correct_stimulus_during_gaps~df.full$detour_trial_1_did_fish_solve_barrier_problem)
p_value<- test %>% broom::tidy() %>% select(p.value) %>% unlist
p <- ggplot(df.full, aes(x=detour_trial_1_did_fish_solve_barrier_problem, y=shuttlebox_average_distance_from_correct_stimulus_during_gaps)) +
geom_boxplot()+ stat_n_text() +
ggtitle('Do fish that solve the detour barrier problem have
lower average distances from the correct side in shuttlebox?') +
geom_text(x=1, y=590, label= glue::glue("p (t.test) = {round(p_value,4)}"), size = 6, color = "black")
p
test<-t.test(df.full$shuttlebox_slope~df.full$detour_trial_1_did_fish_solve_barrier_problem)
p_value<- test %>% broom::tidy() %>% select(p.value) %>% unlist
p <- ggplot(df.full, aes(x=detour_trial_1_did_fish_solve_barrier_problem, y=shuttlebox_slope)) +
geom_boxplot()+ stat_n_text() +
ggtitle('Do fish that solve the detour barrier problem have
more negative shuttlebox slopes of learning?') +
geom_text(x=1, y=0.1, label= glue::glue("p (t.test) = {round(p_value,4)}"), size = 6, color = "black")
p
test<-t.test(df.full$shuttlebox_slope~df.full$detour_trial_1_did_fish_solve_barrier_problem)
p_value<- test %>% broom::tidy() %>% select(p.value) %>% unlist
p <- ggplot(df.full, aes(x=detour_trial_1_did_fish_solve_barrier_problem, y=shuttlebox_slope)) +
geom_boxplot()+ stat_n_text() +
ggtitle('Do fish that solve the detour barrier problem have
more negative shuttlebox slopes of learning?') +
geom_text(x=1, y=5, label= glue::glue("p (t.test) = {round(p_value,4)}"), size = 6, color = "black")
p
df.full(colnames)
colnames(df.full)
View(df.full)
test<-t.test(df.full$shuttlebox_average_distance_from_correct_stimulus_during_gaps~df.full$sex.x)
p_value<- test %>% broom::tidy() %>% select(p.value) %>% unlist
p <- ggplot(df.full, aes(x=sex.x, y=shuttlebox_average_distance_from_correct_stimulus_during_gaps)) +
geom_boxplot()+ stat_n_text() +
ggtitle('#Does sex predict shuttlebox average distance from the correct side?') +
geom_text(x=1, y=540, label= glue::glue("p (t.test) = {round(p_value,4)}"), size = 6, color = "black")
p
p <- ggplot(df.full, aes(x=sex.x, y=shuttlebox_average_distance_from_correct_stimulus_during_gaps)) +
geom_boxplot()+ stat_n_text() +
ggtitle('#Does sex predict shuttlebox average distance from the correct side?') +
geom_text(label= glue::glue("p (t.test) = {round(p_value,4)}"), size = 6, color = "black")
p
p <- ggplot(df.full, aes(x=sex.x, y=shuttlebox_average_distance_from_correct_stimulus_during_gaps)) +
geom_boxplot()+ stat_n_text() +
ggtitle('#Does sex predict shuttlebox average distance from the correct side?') +
geom_text(x=0, y=540, label= glue::glue("p (t.test) = {round(p_value,4)}"), size = 6, color = "black")
p
p <- ggplot(df.full, aes(x=sex.x, y=shuttlebox_average_distance_from_correct_stimulus_during_gaps)) +
geom_boxplot()+ stat_n_text() +
ggtitle('#Does sex predict shuttlebox average distance from the correct side?') +
geom_text(x='M', y=540, label= glue::glue("p (t.test) = {round(p_value,4)}"), size = 6, color = "black")
p
p <- ggplot(df.full, aes(x=sex.x, y=shuttlebox_average_distance_from_correct_stimulus_during_gaps)) +
geom_boxplot()+ stat_n_text() +
ggtitle('#Does sex predict shuttlebox average distance from the correct side?') +
geom_text(x=1, y=540, label= glue::glue("p (t.test) = {round(p_value,4)}"), size = 6, color = "black")
p
p <- ggplot(df.full, aes(x=sex.x, y=shuttlebox_average_distance_from_correct_stimulus_during_gaps)) +
geom_boxplot()+ stat_n_text() +
ggtitle('#Does sex predict shuttlebox average distance from the correct side?') +
geom_text(y=540, label= glue::glue("p (t.test) = {round(p_value,4)}"), size = 6, color = "black")
p
p <- ggplot(df.full, aes(x=sex.x, y=shuttlebox_average_distance_from_correct_stimulus_during_gaps)) +
geom_boxplot()+ stat_n_text() +
ggtitle('#Does sex predict shuttlebox average distance from the correct side?') +
geom_text(position = position_dodge(width = 0.75), label= glue::glue("p (t.test) = {round(p_value,4)}"), size = 6, color = "black")
p
p <- ggplot(df.full, aes(x=sex.x, y=shuttlebox_average_distance_from_correct_stimulus_during_gaps)) +
geom_boxplot()+ stat_n_text() +
ggtitle('#Does sex predict shuttlebox average distance from the correct side? p = 0.209') #+
#geom_text(label= glue::glue("p (t.test) = {round(p_value,4)}"), size = 6, color = "black")
p
test<-t.test(df.full$shuttlebox_slope~df.full$detour_trial_1_did_fish_solve_barrier_problem)
p_value<- test %>% broom::tidy() %>% select(p.value) %>% unlist
p <- ggplot(df.full, aes(x=detour_trial_1_did_fish_solve_barrier_problem, y=shuttlebox_slope)) +
geom_boxplot()+ stat_n_text() +
ggtitle('Do fish that solve the detour barrier problem have
more negative shuttlebox slopes of learning?') +
geom_text(x=1, y=5, label= glue::glue("p (t.test) = {round(p_value,4)}"), size = 6, color = "black")
p
test<-t.test(df.full$shuttlebox_slope~df.full$sex.x)
p_value<- test %>% broom::tidy() %>% select(p.value) %>% unlist
p <- ggplot(df.full, aes(x=sex.x, y=shuttlebox_slope)) +
geom_boxplot()+ stat_n_text() +
ggtitle('#Does sex predict shuttlebox slope of learning?') +
geom_text(x=1, y=0.1, label= glue::glue("p (t.test) = {round(p_value,4)}"), size = 6, color = "black")
p
p <- ggplot(df.full, aes(x=sex.x, y=shuttlebox_slope)) +
geom_boxplot()+ stat_n_text() +
ggtitle('#Does sex predict shuttlebox slope of learning?') +
geom_text(x=1, y=3, label= glue::glue("p (t.test) = {round(p_value,4)}"), size = 6, color = "black")
p
test<-t.test(df.full$shuttlebox_slope~df.full$sex.x)
p_value<- test %>% broom::tidy() %>% select(p.value) %>% unlist
p <- ggplot(df.full, aes(x=sex.x, y=shuttlebox_slope)) +
geom_boxplot()+ stat_n_text() +
ggtitle('#Does sex predict shuttlebox slope of learning?') +
geom_text(x=1, y=3, label= glue::glue("p (t.test) = {round(p_value,4)}"), size = 6, color = "black")
p
mod<- lm(df.full$shuttlebox_average_distance_from_correct_stimulus_during_gaps ~ df.full$detour_trial_1_barrier_problem_time_around_barrier_minus_time_to_contact_barrier)
summary(mod)
number <- df.full %>% filter(!is.na(detour_trial_1_barrier_problem_time_around_barrier_minus_time_to_contact_barrier)) %>% filter(!is.na(shuttlebox_average_distance_from_correct_stimulus_during_gaps)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df.full, aes(detour_trial_1_barrier_problem_time_around_barrier_minus_time_to_contact_barrier, shuttlebox_average_distance_from_correct_stimulus_during_gaps))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=150, y=0.3,label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
ggtitle ("Does latency to solve the detour barrier problem predict
average distance from the correct side in shuttlebox?") +
geom_smooth(method = "lm")
mod<- lm(df.full$shuttlebox_average_distance_from_correct_stimulus_during_gaps ~ df.full$detour_trial_1_barrier_problem_time_around_barrier_minus_time_to_contact_barrier)
summary(mod)
number <- df.full %>% filter(!is.na(detour_trial_1_barrier_problem_time_around_barrier_minus_time_to_contact_barrier)) %>% filter(!is.na(shuttlebox_average_distance_from_correct_stimulus_during_gaps)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df.full, aes(detour_trial_1_barrier_problem_time_around_barrier_minus_time_to_contact_barrier, shuttlebox_average_distance_from_correct_stimulus_during_gaps))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=150, y=590,label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
ggtitle ("Does latency to solve the detour barrier problem predict
average distance from the correct side in shuttlebox?") +
geom_smooth(method = "lm")
p <- ggplot(df.full, aes(detour_trial_1_barrier_problem_time_around_barrier_minus_time_to_contact_barrier, shuttlebox_average_distance_from_correct_stimulus_during_gaps))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=150, y=600,label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
ggtitle ("Does latency to solve the detour barrier problem predict
average distance from the correct side in shuttlebox?") +
geom_smooth(method = "lm")
mod<- lm(df.full$shuttlebox_slope ~ df.full$detour_trial_1_barrier_problem_time_around_barrier_minus_time_to_contact_barrier)
summary(mod)
number <- df.full %>% filter(!is.na(detour_trial_1_barrier_problem_time_around_barrier_minus_time_to_contact_barrier)) %>% filter(!is.na(shuttlebox_slope)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df.full, aes(detour_trial_1_barrier_problem_time_around_barrier_minus_time_to_contact_barrier, shuttlebox_slope))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=150, y=0.3,label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
ggtitle ("Note:***********") +
geom_smooth(method = "lm")
p <- ggplot(df.full, aes(detour_trial_1_barrier_problem_time_around_barrier_minus_time_to_contact_barrier, shuttlebox_slope))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=150, y=0.3,label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
ggtitle ("Does latency to solve the detour barrier problem
predict shuttlebox slope of learning?") +
geom_smooth(method = "lm")
mod<- lm(df.full$shuttlebox_average_distance_from_correct_stimulus_during_gaps ~ df.full$average_performance_across_all_9_testing_trials_using_T30_to_T50_data)
summary(mod)
number <- df.full %>% filter(!is.na(average_performance_across_all_9_testing_trials_using_T30_to_T50_data)) %>% filter(!is.na(shuttlebox_average_distance_from_correct_stimulus_during_gaps)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df.full, aes(average_performance_across_all_9_testing_trials_using_T30_to_T50_data, shuttlebox_average_distance_from_correct_stimulus_during_gaps))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=150, y=0.3,label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
ggtitle ("Does numerosity average performance (T30 to T50) predict
average distance from the correct side in shuttlebox?") +
geom_smooth(method = "lm")
p <- ggplot(df.full, aes(average_performance_across_all_9_testing_trials_using_T30_to_T50_data, shuttlebox_average_distance_from_correct_stimulus_during_gaps))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=0, y=600,label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
ggtitle ("Does numerosity average performance (T30 to T50) predict
average distance from the correct side in shuttlebox?") +
geom_smooth(method = "lm")
p <- ggplot(df.full, aes(average_performance_across_all_9_testing_trials_using_T30_to_T50_data, shuttlebox_average_distance_from_correct_stimulus_during_gaps))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=0.4, y=600,label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
ggtitle ("Does numerosity average performance (T30 to T50) predict
average distance from the correct side in shuttlebox?") +
geom_smooth(method = "lm")
mod<- lm(df.full$shuttlebox_average_distance_from_correct_stimulus_during_gaps ~ df.full$average_performance_across_all_9_testing_trials_using_T30_to_T50_data)
summary(mod)
number <- df.full %>% filter(!is.na(average_performance_across_all_9_testing_trials_using_T30_to_T50_data)) %>% filter(!is.na(shuttlebox_average_distance_from_correct_stimulus_during_gaps)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df.full, aes(average_performance_across_all_9_testing_trials_using_T30_to_T50_data, shuttlebox_average_distance_from_correct_stimulus_during_gaps))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=0.4, y=600,label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
ggtitle ("Does numerosity average performance (T30 to T50) predict
average distance from the correct side in shuttlebox?") +
geom_smooth(method = "lm")
p <- ggplot(df.full, aes(average_performance_across_all_9_testing_trials_using_T30_to_T50_data, shuttlebox_average_distance_from_correct_stimulus_during_gaps))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=0.5, y=600,label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
ggtitle ("Does numerosity average performance (T30 to T50) predict
average distance from the correct side in shuttlebox?") +
geom_smooth(method = "lm")
mod<- lm(df.full$shuttlebox_slope ~ df.full$average_performance_across_all_9_testing_trials_using_T30_to_T50_data)
summary(mod)
number <- df.full %>% filter(!is.na(average_performance_across_all_9_testing_trials_using_T30_to_T50_data)) %>% filter(!is.na(shuttlebox_slope)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df.full, aes(average_performance_across_all_9_testing_trials_using_T30_to_T50_data, shuttlebox_slope))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=150, y=0.3,label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
ggtitle ("Does numerosity average performance (T30 to T50) shuttlebox slope of learning?") +
geom_smooth(method = "lm")
p <- ggplot(df.full, aes(average_performance_across_all_9_testing_trials_using_T30_to_T50_data, shuttlebox_slope))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=0.5, y=0.3,label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
ggtitle ("Does numerosity average performance (T30 to T50) shuttlebox slope of learning?") +
geom_smooth(method = "lm")
mod<- lm(df.full$shuttlebox_average_distance_from_correct_stimulus_during_gaps ~ df.full$average_latency_to_enter_correct_side)
summary(mod)
number <- df.full %>% filter(!is.na(average_latency_to_enter_correct_side)) %>% filter(!is.na(shuttlebox_average_distance_from_correct_stimulus_during_gaps)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df.full, aes(average_latency_to_enter_correct_side, shuttlebox_average_distance_from_correct_stimulus_during_gaps))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=150, y=0.3,label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
ggtitle ("Does numerosity latency to enter the correct side
predict average distance from the correct side in shuttlebox?") +
geom_smooth(method = "lm")
p <- ggplot(df.full, aes(average_latency_to_enter_correct_side, shuttlebox_average_distance_from_correct_stimulus_during_gaps))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=0.5, y=600,label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
ggtitle ("Does numerosity latency to enter the correct side
predict average distance from the correct side in shuttlebox?") +
geom_smooth(method = "lm")
p <- ggplot(df.full, aes(average_latency_to_enter_correct_side, shuttlebox_average_distance_from_correct_stimulus_during_gaps))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=25, y=600,label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
ggtitle ("Does numerosity latency to enter the correct side
predict average distance from the correct side in shuttlebox?") +
geom_smooth(method = "lm")
mod<- lm(df.full$shuttlebox_slope ~ df.full$average_latency_to_enter_correct_side)
summary(mod)
number <- df.full %>% filter(!is.na(average_latency_to_enter_correct_side)) %>% filter(!is.na(shuttlebox_slope)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df.full, aes(average_latency_to_enter_correct_side, shuttlebox_slope))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=150, y=0.3,label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
ggtitle ("Note:Does numerosity latency to enter the correct side
predict shuttlebox slope of learning?") +
geom_smooth(method = "lm")
p <- ggplot(df.full, aes(average_latency_to_enter_correct_side, shuttlebox_slope))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=25, y=0.3,label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
ggtitle ("Note:Does numerosity latency to enter the correct side
predict shuttlebox slope of learning?") +
geom_smooth(method = "lm")
