for(i in 1:nrow(df.fish)){
if (is.na(df.fish$screen_entered_first[i]) == TRUE){
if(i == 1){
countlist_correct_choice_first[i]<- 0}
else{
countlist_correct_choice_first[i]<- countlist_correct_choice_first[i-1]}}
else if (df.fish$screen_entered_first[i] == 'incorrect'){
countlist_correct_choice_first[i]<- 0}
else if (df.fish$screen_entered_first[i] == 'correct'){
if(i == 1){
countlist_correct_choice_first[i]<- 1}
else{
countlist_correct_choice_first[i]<- countlist_correct_choice_first[i-1] + 1}}
}
streak.full_4_minutes<-max(countlist_full_4_minutes)
streak.T30_to_T50<-max(countlist_T30_to_T50)
streak.correct_choice_first<- max(countlist_correct_choice_first)
df.sum$number_of_trials_in_a_row_greater_than_60_percent_full_4_minutes[j] <- streak.full_4_minutes
df.sum$number_of_trials_in_a_row_greater_than_60_percent_T30_to_T50[j] <- streak.T30_to_T50
df.sum$number_of_trials_in_a_row_correct_choice_first[j] <- streak.correct_choice_first
}
for(i in 1:nrow(df.sum)){
df.sum$mean_of_median_performance_on_each_ratio_full_four_minutes_data[i] <- mean(c(df.sum$median_performance_on_0.50_ratio_using_full_4_minutes_data[i],df.sum$median_performance_on_0.67_ratio_using_full_4_minutes_data[i], df.sum$median_performance_on_0.75_ratio_using_full_4_minutes_data[i]), na.rm = TRUE)
df.sum$mean_of_median_performance_on_each_ratio_T30_to_T50_data[i] <- mean(c(df.sum$median_performance_on_0.50_ratio_using_T30_to_T50_data[i],df.sum$median_performance_on_0.67_ratio_using_T30_to_T50_data[i], df.sum$median_performance_on_0.75_ratio_using_T30_to_T50_data[i]), na.rm = TRUE)
}
write_csv(df.sum, "Numerosity Comparative Cognition Full Dataset April_17_2018.csv")
library(EnvStats)
df<- read_csv("C:/Users/Kelly/Desktop/Grad School/Cummings Lab/Comparative Cognition/Comparative Cognition R Scripts/Numerosity Comparative Cognition Full Dataset April_17_2018.csv", col_names = TRUE, col_types = NULL)
View(df)
mod<- lm(df$proportion_of_correct_first_choices ~ df$average_latency_to_enter_correct_side, na.rm = TRUE)
summary(mod)
number <- df %>% filter(!is.na(average_latency_to_enter_correct_side)) %>% filter(!is.na(proportion_of_correct_first_choices)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df, aes(average_latency_to_enter_correct_side, proportion_of_correct_first_choices))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=30, y=0.8, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "average_latency_to_enter_correct_side",y="proportion_of_correct_first_choices") +
ggtitle ("Does average latency to enter the correct side predict
proportion of first choices (speed accuracy tradeoff)?") +
geom_smooth(method = "lm")
mod<- lm(df$proportion_of_correct_first_choices ~ df$average_latency_to_enter_correct_side_filtere_just_correct_choice, na.rm = TRUE)
mod<- lm(df$proportion_of_correct_first_choices ~ df$average_latency_to_enter_correct_side_filtered_just_correct_choice, na.rm = TRUE)
summary(mod)
number <- df %>% filter(!is.na(average_latency_to_enter_correct_side_filtered_just_correct_choice)) %>% filter(!is.na(proportion_of_correct_first_choices)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df, aes(average_latency_to_enter_correct_side_filtered_just_correct_choice, proportion_of_correct_first_choices))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=30, y=0.8, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "average_latency_to_enter_correct_side_filtered_just_correct_choice",y="proportion_of_correct_first_choices") +
ggtitle ("Does average latency to enter the correct side (filtered) predict
proportion of first choices (speed accuracy tradeoff)?") +
geom_smooth(method = "lm")
mod<- lm(df$average_performance_across_all_9_testing_trials_using_full_4_minutes_data ~ df$average_latency_to_enter_correct_side, na.rm = TRUE)
summary(mod)
number <- df %>% filter(!is.na(average_latency_to_enter_correct_side)) %>% filter(!is.na(average_performance_across_all_9_testing_trials_using_full_4_minutes_data)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df, aes(average_latency_to_enter_correct_side, average_performance_across_all_9_testing_trials_using_full_4_minutes_data))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=50, y=0.5, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "average_latency_to_enter_correct_side",y="average_performance_across_all_9_testing_trials_
using_full_4_minutes_data") +
ggtitle ("Does average latency to enter the correct side predict
average performance over full 4 minutes data (speed accuracy tradeoff)?") +
geom_smooth(method = "lm")
#p should be 0.01221 and rsq should be 0.1757
mod<- lm(df$average_performance_across_all_9_testing_trials_using_full_4_minutes_data ~ df$average_latency_to_enter_correct_side_filtered_just_correct_choice, na.rm = TRUE)
summary(mod)
number <- df %>% filter(!is.na(average_latency_to_enter_correct_side_filtered_just_correct_choice)) %>% filter(!is.na(average_performance_across_all_9_testing_trials_using_full_4_minutes_data)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df, aes(average_latency_to_enter_correct_side_filtered_just_correct_choice, average_performance_across_all_9_testing_trials_using_full_4_minutes_data))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=50, y=0.5, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "average_latency_to_enter_correct_side_filtered_just_correct_choice",y="average_performance_across_all_9_testing_trials_
using_full_4_minutes_data") +
ggtitle ("Does average latency to enter the correct side (filtered) predict
average performance over full 4 minutes data (speed accuracy tradeoff)?") +
geom_smooth(method = "lm")
mod<- lm(df$average_performance_across_all_9_testing_trials_using_T30_to_T50_data ~ df$average_latency_to_enter_correct_side_filtered_just_correct_choice, na.rm = TRUE)
summary(mod)
number <- df %>% filter(!is.na(average_latency_to_enter_correct_side_filtered_just_correct_choice)) %>% filter(!is.na(average_performance_across_all_9_testing_trials_using_T30_to_T50_data)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df, aes(average_latency_to_enter_correct_side_filtered_just_correct_choice, average_performance_across_all_9_testing_trials_using_T30_to_T50_data))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=50, y=0.5, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "average_latency_to_enter_correct_side_
filtered_just_correct_choice",y="average_performance_across_all_9_testing_trials_
using_T30_to_T50_data") +
ggtitle ("Does average latency to enter correct side (filtered)predict
average performance (T30 to T50 data)?") +
geom_smooth(method = "lm")
mod<- lm(df$average_performance_across_all_9_testing_trials_using_T30_to_T50_data ~ df$average_latency_to_enter_correct_side, na.rm = TRUE)
summary(mod)
number <- df %>% filter(!is.na(average_latency_to_enter_correct_side)) %>% filter(!is.na(average_performance_across_all_9_testing_trials_using_T30_to_T50_data)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df, aes(average_latency_to_enter_correct_side, average_performance_across_all_9_testing_trials_using_T30_to_T50_data))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=50, y=0.5, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "average_latency_to_enter_correct_side",y="average_performance_across_all_9_testing_trials_
using_T30_to_T50_data") +
ggtitle ("Does average latency to enter correct side predict
average performance (T30 to T50 data)?") +
geom_smooth(method = "lm")
mod<- lm(df$mean_of_median_performance_on_each_ratio_full_four_minutes_data ~ df$average_latency_to_enter_correct_side_filtered_just_correct_choice, na.rm = TRUE)
summary(mod)
number <- df %>% filter(!is.na(average_latency_to_enter_correct_side_filtered_just_correct_choice)) %>% filter(!is.na(mean_of_median_performance_on_each_ratio_full_four_minutes_data)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df, aes(average_latency_to_enter_correct_side_filtered_just_correct_choice, mean_of_median_performance_on_each_ratio_full_four_minutes_data))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=30, y=0.5, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "average_latency_to_enter_correct_side_filtered
_just_correct_choice",y="mean_of_median_performance_on_each_ratio_
full_four_minutes_data") +
ggtitle ("Does average latency to enter correct side (filtered) predict
mean of median performance on each ratio (mean of median measured in full 4 minutes)?") +
geom_smooth(method = "lm")
mod<- lm(df$mean_of_median_performance_on_each_ratio_full_four_minutes_data ~ df$average_latency_to_enter_correct_side, na.rm = TRUE)
summary(mod)
number <- df %>% filter(!is.na(average_latency_to_enter_correct_side)) %>% filter(!is.na(mean_of_median_performance_on_each_ratio_full_four_minutes_data)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df, aes(average_latency_to_enter_correct_side, mean_of_median_performance_on_each_ratio_full_four_minutes_data))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=30, y=0.5, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "average_latency_to_enter_correct_side",y="mean_of_median_performance_on_each_ratio_
full_four_minutes_data") +
ggtitle ("Does average latency to enter correct side predict
mean of median performance on each ratio (mean of median measured in full 4 minutes)?") +
geom_smooth(method = "lm")
mod<- lm(df$proportion_of_correct_first_choices ~ df$average_latency_to_enter_correct_side_filtered_just_correct_choice, na.rm = TRUE)
summary(mod)
number <- df %>% filter(!is.na(average_latency_to_enter_correct_side_filtered_just_correct_choice)) %>% filter(!is.na(proportion_of_correct_first_choices)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df, aes(average_latency_to_enter_correct_side_filtered_just_correct_choice, proportion_of_correct_first_choices))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=30, y=0.8, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "average_latency_to_enter_correct_side_filtered_just_correct_choice",y="proportion_of_correct_first_choices") +
ggtitle ("Does average latency to enter the correct side (filtered) predict
proportion of first choices (speed accuracy tradeoff)?") +
geom_smooth(method = "lm")
mod<- lm(df$average_performance_across_all_9_testing_trials_using_T30_to_T50_data ~ df$average_latency_to_enter_correct_side_filtered_just_correct_choice, na.rm = TRUE)
summary(mod)
number <- df %>% filter(!is.na(average_latency_to_enter_correct_side_filtered_just_correct_choice)) %>% filter(!is.na(average_performance_across_all_9_testing_trials_using_T30_to_T50_data)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df, aes(average_latency_to_enter_correct_side_filtered_just_correct_choice, average_performance_across_all_9_testing_trials_using_T30_to_T50_data))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=50, y=0.5, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "average_latency_to_enter_correct_side_
filtered_just_correct_choice",y="average_performance_across_all_9_testing_trials_
using_T30_to_T50_data") +
ggtitle ("Does average latency to enter correct side (filtered)predict
average performance (T30 to T50 data)?") +
geom_smooth(method = "lm")
#****************************************************************************** this is the luke set up, use it as a template if needed
mod<- lm(df$average_performance_across_all_9_testing_trials_using_T30_to_T50_data ~ df$average_latency_to_enter_correct_side, na.rm = TRUE)
summary(mod)
number <- df %>% filter(!is.na(average_latency_to_enter_correct_side)) %>% filter(!is.na(average_performance_across_all_9_testing_trials_using_T30_to_T50_data)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df, aes(average_latency_to_enter_correct_side, average_performance_across_all_9_testing_trials_using_T30_to_T50_data))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=50, y=0.5, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "average_latency_to_enter_correct_side",y="average_performance_across_all_9_testing_trials_
using_T30_to_T50_data") +
ggtitle ("Does average latency to enter correct side predict
average performance (T30 to T50 data)?") +
geom_smooth(method = "lm")
mod<- lm(df$mean_of_median_performance_on_each_ratio_T30_to_T50_data ~ df$average_latency_to_enter_correct_side_filtered_just_correct_choice, na.rm = TRUE)
summary(mod)
number <- df %>% filter(!is.na(mean_of_median_performance_on_each_ratio_T30_to_T50_data)) %>% filter(!is.na(average_latency_to_enter_correct_side_filtered_just_correct_choice)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df, aes(average_latency_to_enter_correct_side_filtered_just_correct_choice, mean_of_median_performance_on_each_ratio_T30_to_T50_data))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=50, y=0.5, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "average_latency_to_enter_correct_side
_filtered_just_correct_choice",y="mean_of_median_performance_on_each_ratio_T30_to_T50_data") +
ggtitle ("Does average latency to enter correct side (filtered)predict
mean of median performance on each ratio (mean of median measured in T30 to T50)?") +
geom_smooth(method = "lm")
mod<- lm(df$mean_of_median_performance_on_each_ratio_T30_to_T50_data ~ df$average_latency_to_enter_correct_side, na.rm = TRUE)
summary(mod)
number <- df %>% filter(!is.na(mean_of_median_performance_on_each_ratio_T30_to_T50_data)) %>% filter(!is.na(average_latency_to_enter_correct_side)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df, aes(average_latency_to_enter_correct_side, mean_of_median_performance_on_each_ratio_T30_to_T50_data))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=50, y=0.5, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "average_latency_to_enter_correct_side",y="mean_of_median_performance_on_each_ratio_T30_to_T50_data") +
ggtitle ("Does average latency to enter correct side predict
mean of median performance on each ratio (mean of median measured in T30 to T50)?") +
geom_smooth(method = "lm")
fit <- aov(average_latency_to_enter_correct_side ~ number_of_medians_above_60_using_full_4_minutes_data, data=df)
p_value<- summary(fit)[[1]][["Pr(>F)"]][[1]]
#Does number of medians above 60% (full 4 minutes) predict latency to enter correct side?
df$number_of_medians_above_60_using_full_4_minutes_data <-as.character(df$number_of_medians_above_60_using_full_4_minutes_data)
p <- ggplot(df, aes(x=number_of_medians_above_60_using_full_4_minutes_data, y=average_latency_to_enter_correct_side)) +
geom_boxplot()+ stat_n_text() +
ggtitle ('Does number of medians above 60% (full 4 minutes) predict latency to enter correct side?') +
geom_text(x=1, y=80, label= glue::glue("p (ANOVA) = {round(p_value,4)}"), size = 6, color = "black")
p
fit <- aov(average_latency_to_enter_correct_side_filtered_just_correct_choice ~ number_of_medians_above_60_using_full_4_minutes_data, data=df)
p_value<- summary(fit)[[1]][["Pr(>F)"]][[1]]
#Does number of medians above 60% (full 4 minutes) predict latency to enter correct side(filted)?
df$number_of_medians_above_60_using_full_4_minutes_data <-as.character(df$number_of_medians_above_60_using_full_4_minutes_data)
p <- ggplot(df, aes(x=number_of_medians_above_60_using_full_4_minutes_data, y=average_latency_to_enter_correct_side_filtered_just_correct_choice)) +
geom_boxplot()+ stat_n_text() +
ggtitle ('Does number of medians above 60% (full 4 minutes) predict latency to enter correct side (filtered)?') +
geom_text(x=1, y=80, label= glue::glue("p (ANOVA) = {round(p_value,4)}"), size = 6, color = "black")
p
fit <- aov(average_latency_to_enter_correct_side_filtered_just_correct_choice ~ number_of_medians_above_60_using_full_4_minutes_data, data=df)
p_value<- summary(fit)[[1]][["Pr(>F)"]][[1]]
#Does number of medians above 60% (full 4 minutes) predict latency to enter correct side(filted)?
df$number_of_medians_above_60_using_full_4_minutes_data <-as.character(df$number_of_medians_above_60_using_full_4_minutes_data)
p <- ggplot(df, aes(x=number_of_medians_above_60_using_full_4_minutes_data, y=average_latency_to_enter_correct_side_filtered_just_correct_choice)) +
geom_boxplot()+ stat_n_text() +
ggtitle ('Does number of medians above 60% (full 4 minutes) predict latency to enter correct side (filtered)?') +
geom_text(x=1, y=80, label= glue::glue("p (ANOVA) = {round(p_value,4)}"), size = 6, color = "black")
p
fit <- aov(average_latency_to_enter_correct_side_filtered_just_correct_choice ~ number_of_medians_above_60_using_full_4_minutes_data, data=df)
p_value<- summary(fit)[[1]][["Pr(>F)"]][[1]]
#Does number of medians above 60% (full 4 minutes) predict latency to enter correct side(filted)?
df$number_of_medians_above_60_using_full_4_minutes_data <-as.character(df$number_of_medians_above_60_using_full_4_minutes_data)
p <- ggplot(df, aes(x=number_of_medians_above_60_using_full_4_minutes_data, y=average_latency_to_enter_correct_side_filtered_just_correct_choice)) +
geom_boxplot()+ stat_n_text() +
ggtitle ('Does number of medians above 60% (full 4 minutes)
predict latency to enter correct side (filtered)?') +
geom_text(x=1, y=80, label= glue::glue("p (ANOVA) = {round(p_value,4)}"), size = 6, color = "black")
p
fit <- aov(average_latency_to_enter_correct_side_filtered_just_correct_choice ~ number_of_medians_above_60_using_full_4_minutes_data, data=df)
p_value<- summary(fit)[[1]][["Pr(>F)"]][[1]]
#Does number of medians above 60% (full 4 minutes) predict latency to enter correct side(filted)?
df$number_of_medians_above_60_using_full_4_minutes_data <-as.character(df$number_of_medians_above_60_using_full_4_minutes_data)
p <- ggplot(df, aes(x=number_of_medians_above_60_using_full_4_minutes_data, y=average_latency_to_enter_correct_side_filtered_just_correct_choice)) +
geom_boxplot()+ stat_n_text() +
ggtitle ('Does number of medians above 60% (full 4 minutes)
predict latency to enter correct side (filtered)?') +
geom_text(x=1, y=80, label= glue::glue("p (ANOVA) = {round(p_value,4)}"), size = 6, color = "black")
p
fit <- aov(average_latency_to_enter_correct_side ~ number_of_medians_above_60_using_T30_to_T50_data, data=df)
p_value<- summary(fit)[[1]][["Pr(>F)"]][[1]]
#Does number of medians above 60% (T30 to T50) predict latency to enter correct side?
df$number_of_medians_above_60_using_T30_to_T50_data <-as.character(df$number_of_medians_above_60_using_T30_to_T50_data)
p <- ggplot(df, aes(x=number_of_medians_above_60_using_T30_to_T50_data, y=average_latency_to_enter_correct_side)) +
geom_boxplot()+ stat_n_text() +
ggtitle('Does number of medians above 60% (T30 to T50) predict latency to enter correct side?') +
geom_text(x=2, y=80, label= glue::glue("p (ANOVA) = {round(p_value,4)}"), size = 6, color = "black")
p
fit <- aov(average_latency_to_enter_correct_side_filtered_just_correct_choice ~ number_of_medians_above_60_using_T30_to_T50_data, data=df)
p_value<- summary(fit)[[1]][["Pr(>F)"]][[1]]
#Does number of medians above 60% (T30 to T50) predict latency to enter correct side (filtered)?
df$number_of_medians_above_60_using_T30_to_T50_data <-as.character(df$number_of_medians_above_60_using_T30_to_T50_data)
p <- ggplot(df, aes(x=number_of_medians_above_60_using_T30_to_T50_data, y=average_latency_to_enter_correct_side_filtered_just_correct_choice)) +
geom_boxplot()+ stat_n_text() +
ggtitle('Does number of medians above 60% (T30 to T50) predict
latency to enter correct side? (filtered)') +
geom_text(x=2, y=80, label= glue::glue("p (ANOVA) = {round(p_value,4)}"), size = 6, color = "black")
p
mod<- lm(df$average_latency_to_enter_correct_side ~ df$average_number_of_entries, na.rm = TRUE)
summary(mod)
number <- df %>% filter(!is.na(average_latency_to_enter_correct_side)) %>% filter(!is.na(average_number_of_entries)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df, aes(average_number_of_entries, average_latency_to_enter_correct_side))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=50, y=0.2, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "average_number_of_entries",y="average_latency_to_enter_correct_side") +
ggtitle ("Does average number of entries predict average latency to enter correct side?") +
geom_smooth(method = "lm")
mod<- lm(df$average_latency_to_enter_correct_side_filtered_just_correct_choice ~ df$average_number_of_entries, na.rm = TRUE)
summary(mod)
number <- df %>% filter(!is.na(average_latency_to_enter_correct_side_filtered_just_correct_choice)) %>% filter(!is.na(average_number_of_entries)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df, aes(average_number_of_entries, average_latency_to_enter_correct_side_filtered_just_correct_choice))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=50, y=0.2, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "average_number_of_entries",y="average_latency_to_enter_correct_side_filtered_just_correct_choice") +
ggtitle ("Does average number of entries predict
average latency to enter correct side?(filtered)") +
geom_smooth(method = "lm")
mod<- lm(df$average_latency_to_enter_correct_side_filtered_just_correct_choice ~ df$average_number_of_entries * df$sex)
summary(mod)
number <- df %>% filter(!is.na(average_latency_to_enter_correct_side_filtered_just_correct_choice)) %>% filter(!is.na(average_number_of_entries)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df, aes(average_number_of_entries, average_latency_to_enter_correct_side_filtered_just_correct_choice, color = sex))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=50, y=0.2, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "average_number_of_entries",y="average_latency_to_enter_correct_side_filtered_just_correct_choice") +
ggtitle ("Does average number of entries predict
average latency to enter correct side?(filtered)") +
geom_smooth(method = "lm")
mod<-lm(df$average_latency_to_enter_correct_side ~ df$average_number_of_entries * df$sex)
number <- df %>% filter(!is.na(average_latency_to_enter_correct_side)) %>% filter(!is.na(average_number_of_entries)) %>% nrow
p_value<- coef(summary(mod))%>%as.list()
p_value<-p_value[[16]]
p <- ggplot(df, aes(average_number_of_entries, average_latency_to_enter_correct_side, color = sex))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=50, y=0.2, label= glue::glue("p (interaction)= {round(p_value,4)}
n = {number}"), size = 6, color = "black") +
labs(x= "average_number_of_entries",y="average_latency_to_enter_correct_side") +
ggtitle ("Does average number of entries predict average latency to enter correct side?") +
geom_smooth(method = "lm")
mod<-lm(df$average_latency_to_enter_correct_side_filtered_just_correct_choice ~ df$average_number_of_entries * df$sex)
number <- df %>% filter(!is.na(average_latency_to_enter_correct_side_filtered_just_correct_choice)) %>% filter(!is.na(average_number_of_entries)) %>% nrow
p_value<- coef(summary(mod))%>%as.list()
p_value<-p_value[[16]]
p <- ggplot(df, aes(average_number_of_entries, average_latency_to_enter_correct_side_filtered_just_correct_choice, color = sex))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=50, y=0.2, label= glue::glue("p (interaction)= {round(p_value,4)}
n = {number}"), size = 6, color = "black") +
labs(x= "average_number_of_entries",y="average_latency_to_enter_correct_side_filtered_just_correct_choice") +
ggtitle ("Does average number of entries predict average latency to enter correct side? (filtered)") +
geom_smooth(method = "lm")
mod<- lm(df$average_latency_to_enter_correct_side ~ df$average_reaction_time, na.rm = TRUE)
summary(mod)
number <- df %>% filter(!is.na(average_latency_to_enter_correct_side)) %>% filter(!is.na(average_reaction_time)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df, aes(average_reaction_time, average_latency_to_enter_correct_side))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=10, y=0.2, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "average_reaction_time",y="average_latency_to_enter_correct_side") +
ggtitle ("Does average reaction time predict latency to enter correct side?") +
geom_smooth(method = "lm")
mod<-lm(df$average_latency_to_enter_correct_side ~ df$average_reaction_time * df$sex)
number <- df %>% filter(!is.na(average_latency_to_enter_correct_side)) %>% filter(!is.na(average_reaction_time)) %>% nrow
p_value<- coef(summary(mod))%>%as.list()
p_value<-p_value[[16]]
p <- ggplot(df, aes(average_reaction_time, average_latency_to_enter_correct_side, color = sex))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=10, y=10, label= glue::glue("p (interaction)= {round(p_value,4)}
n = {number}"), size = 6, color = "black") +
labs(x= "average_reaction_time",y="average_latency_to_enter_correct_side") +
ggtitle ("Does average reaction time predict latency to enter correct side?") +
geom_smooth(method = "lm")
#Does average reaction time predict latency to enter correct side (filtered)?
mod<- lm(df$average_latency_to_enter_correct_side_filtered_just_correct_choice ~ df$average_reaction_time, na.rm = TRUE)
summary(mod)
number <- df %>% filter(!is.na(average_latency_to_enter_correct_side_filtered_just_correct_choice)) %>% filter(!is.na(average_reaction_time)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df, aes(average_reaction_time, average_latency_to_enter_correct_side_filtered_just_ccorrect_Choice))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=10, y=0.2, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "average_reaction_time",y="average_latency_to_enter_correct_side(filtered)") +
ggtitle ("Does average reaction time predict latency to enter correct side? (filtered)") +
geom_smooth(method = "lm")
#Does average reaction time predict latency to enter correct side (filtered)?
mod<- lm(df$average_latency_to_enter_correct_side_filtered_just_correct_choice ~ df$average_reaction_time, na.rm = TRUE)
summary(mod)
number <- df %>% filter(!is.na(average_latency_to_enter_correct_side_filtered_just_correct_choice)) %>% filter(!is.na(average_reaction_time)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df, aes(average_reaction_time, average_latency_to_enter_correct_side_filtered_just_correct_Choice))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=10, y=0.2, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "average_reaction_time",y="average_latency_to_enter_correct_side(filtered)") +
ggtitle ("Does average reaction time predict latency to enter correct side? (filtered)") +
geom_smooth(method = "lm")
mod<- lm(df$average_latency_to_enter_correct_side_filtered_just_correct_choice ~ df$average_reaction_time, na.rm = TRUE)
summary(mod)
number <- df %>% filter(!is.na(average_latency_to_enter_correct_side_filtered_just_correct_choice)) %>% filter(!is.na(average_reaction_time)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df, aes(average_reaction_time, average_latency_to_enter_correct_side_filtered_just_correct_choice))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=10, y=0.2, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "average_reaction_time",y="average_latency_to_enter_correct_side(filtered)") +
ggtitle ("Does average reaction time predict latency to enter correct side? (filtered)") +
geom_smooth(method = "lm")
mod<-lm(df$average_latency_to_enter_correct_side_filtered_just_correct_choice ~ df$average_reaction_time * df$sex)
number <- df %>% filter(!is.na(average_latency_to_enter_correct_side_filtered_just_correct_choice)) %>% filter(!is.na(average_reaction_time)) %>% nrow
p_value<- coef(summary(mod))%>%as.list()
p_value<-p_value[[16]]
p <- ggplot(df, aes(average_reaction_time, average_latency_to_enter_correct_side_filtered_just_correct_choice, color = sex))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=10, y=10, label= glue::glue("p (interaction)= {round(p_value,4)}
n = {number}"), size = 6, color = "black") +
labs(x= "average_reaction_time",y="average_latency_to_enter_correct_side_filtered_just_correct_choice") +
ggtitle ("Does average reaction time predict latency to enter correct side? (filtered)") +
geom_smooth(method = "lm")
test<-t.test(df$average_latency_to_enter_correct_side~df$sex)
p_value<- test %>% broom::tidy() %>% select(p.value) %>% unlist
p <- ggplot(df, aes(x=sex, y=average_latency_to_enter_correct_side)) +
geom_boxplot()+ stat_n_text() +
geom_text(x=1, y=0, label= glue::glue("p = {round(p_value,4)}"), size = 6, color = "black")
p +  ggtitle ("Does sex predict average latency to enter correct zone?")
test<-t.test(df$average_latency_to_enter_correct_side_filtered_just_correct_choice~df$sex)
p_value<- test %>% broom::tidy() %>% select(p.value) %>% unlist
p <- ggplot(df, aes(x=sex, y=average_latency_to_enter_correct_side_filtered_just_correct_choice)) +
geom_boxplot()+ stat_n_text() +
geom_text(x=1, y=0, label= glue::glue("p = {round(p_value,4)}"), size = 6, color = "black")
p +  ggtitle ("Does sex predict average latency to enter correct zone?(filtered)")
mod<- lm(df$average_latency_to_enter_correct_side ~ df$standard_length, na.rm = TRUE)
summary(mod)
number <- df %>% filter(!is.na(average_latency_to_enter_correct_side)) %>% filter(!is.na(standard_length)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df, aes(standard_length, average_latency_to_enter_correct_side))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=1800, y=75, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "standard_length",y="average_latency_to_enter_correct_side") +
ggtitle ("Does size/age predict average latency to enter correct side? SEXES COMBINED") +
geom_smooth(method = "lm")
mod<- lm(df$average_latency_to_enter_correct_side_filtered_just_correct_choice ~ df$standard_length, na.rm = TRUE)
summary(mod)
number <- df %>% filter(!is.na(average_latency_to_enter_correct_side_filtered_just_correct_choice)) %>% filter(!is.na(standard_length)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df, aes(standard_length, average_latency_to_enter_correct_side_filtered_just_correct_choice))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=1800, y=75, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "standard_length",y="average_latency_to_enter_correct_side_filtered_just_correct_choice") +
ggtitle ("Does size/age predict average latency to enter correct side (filtered)? SEXES COMBINED") +
geom_smooth(method = "lm")
```{r, echo=FALSE, message=FALSE, warning=FALSE}
mod<-lm(df$average_latency_to_enter_correct_side ~ df$standard_length * df$sex)
number <- df %>% filter(!is.na(average_latency_to_enter_correct_side)) %>% filter(!is.na(standard_length)) %>% nrow
p_value<- coef(summary(mod))%>%as.list()
p_value<-p_value[[16]]
p <- ggplot(df, aes(standard_length, average_latency_to_enter_correct_side, color = sex))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=1600, y=20, label= glue::glue("p (interaction) = {round(p_value,4)}
n = {number}"), size = 6, color = "black") +
labs(x= "standard_length",y="average_latency_to_enter_correct_side") +
ggtitle ("Does size/age predict average latency to enter correct side?") +
geom_smooth(method = "lm")
mod<-lm(df$average_latency_to_enter_correct_side_filtered_just_correct_choice ~ df$standard_length * df$sex)
number <- df %>% filter(!is.na(average_latency_to_enter_correct_side_filtered_just_correct_choice)) %>% filter(!is.na(standard_length)) %>% nrow
p_value<- coef(summary(mod))%>%as.list()
p_value<-p_value[[16]]
p <- ggplot(df, aes(standard_length, average_latency_to_enter_correct_side_filtered_just_correct_choice, color = sex))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=1600, y=20, label= glue::glue("p (interaction) = {round(p_value,4)}
n = {number}"), size = 6, color = "black") +
labs(x= "standard_length",y="average_latency_to_enter_correct_side_filtered_just_correct_choice") +
ggtitle ("Does size/age predict average latency to enter correct side? (filtered)") +
geom_smooth(method = "lm")
fit <- aov(average_latency_to_enter_correct_side ~ order, data=df)
p_value<- summary(fit)[[1]][["Pr(>F)"]][[1]]
#Does order predict average latency to enter correct side?
p <- ggplot(df, aes(x=order, y=average_latency_to_enter_correct_side)) +
geom_boxplot()+ stat_n_text()
p +  ggtitle ("Does order predict average latency to enter correct side?")+
geom_text(x=3, y=0.2, label= glue::glue("p (ANOVA) = {round(p_value,4)}"), size = 6, color = "black")
fit <- aov(average_latency_to_enter_correct_side_filtered_just_correct_choice ~ order, data=df)
p_value<- summary(fit)[[1]][["Pr(>F)"]][[1]]
#Does order predict average latency to enter correct side(filtered)?
p <- ggplot(df, aes(x=order, y=average_latency_to_enter_correct_side_filtered_just_correct_choice)) +
geom_boxplot()+ stat_n_text()
p +  ggtitle ("Does order predict average latency to enter correct side?(filtered)")+
geom_text(x=3, y=0.2, label= glue::glue("p (ANOVA) = {round(p_value,4)}"), size = 6, color = "black")
