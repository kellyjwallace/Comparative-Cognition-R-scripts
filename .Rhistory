p_value_ANOVA<- summary(fit)[[1]][["Pr(>F)"]][[1]]
kruskalfit<-kruskal.test(average_performance_across_all_9_testing_trials_using_T30_to_T50_data ~ number_of_medians_above_60_using_T30_to_T50_data, data=df)
p_value_kruskal<- kruskalfit$p.value
#Does number of medians above 60% (full 4 minutes) predict latency to enter correct side?
df$number_of_medians_above_60_using_T30_to_T50_data <-as.character(df$number_of_medians_above_60_using_T30_to_T50_data)
p <- ggplot(df, aes(x=number_of_medians_above_60_using_T30_to_T50_data, y=average_performance_across_all_9_testing_trials_using_T30_to_T50_data)) +
geom_boxplot()+ stat_n_text() +
ggtitle ('Does number of medians above 60% (T30-50, 2 and 3 combined) predict
average performance?') +
geom_text(x=2, y=0, label= glue::glue("p (ANOVA) = {round(p_value_ANOVA,4)},
p(Kruskal) = {round(p_value_kruskal,4)}"), size = 6, color = "black")
p
df$number_of_medians_above_60_using_T30_to_T50_data_two_and_three_combined <-as.numeric(df$number_of_medians_above_60_using_T30_to_T50_data_two_and_three_combined)
df$sex<-as.factor(df$sex)
fit <- aov(number_of_medians_above_60_using_T30_to_T50_data_two_and_three_combined ~ sex, data=df)
p_value_ANOVA<- summary(fit)[[1]][["Pr(>F)"]][[1]]
kruskalfit<-kruskal.test(number_of_medians_above_60_using_T30_to_T50_data_two_and_three_combined ~ sex, data=df)
p_value_kruskal<- kruskalfit$p.value
#Does number of medians above 60% (full 4 minutes) predict latency to enter correct side?
p <- ggplot(df, aes(x=sex, y=number_of_medians_above_60_using_T30_to_T50_data_two_and_three_combined)) +
geom_point()+ stat_n_text() +
ggtitle ('Does sex predict number of medians above 60% (T30-50, 2 and 3 combined)?') +
geom_text(x=1, y=1, label= glue::glue("p (ANOVA) = {round(p_value_ANOVA,4)},
p(Kruskal) = {round(p_value_kruskal,4)}"), size = 6, color = "black")
p
df$number_of_medians_above_60_using_T30_to_T50_data_two_and_three_combined <-as.numeric(df$number_of_medians_above_60_using_T30_to_T50_data_two_and_three_combined)
df$sex<-as.factor(df$sex)
fit <- aov(number_of_medians_above_60_using_T30_to_T50_data_two_and_three_combined ~ sex, data=df)
p_value_ANOVA<- summary(fit)[[1]][["Pr(>F)"]][[1]]
kruskalfit<-kruskal.test(number_of_medians_above_60_using_T30_to_T50_data_two_and_three_combined ~ sex, data=df)
p_value_kruskal<- kruskalfit$p.value
#Does number of medians above 60% (full 4 minutes) predict latency to enter correct side?
p <- ggplot(df, aes(x=sex, y=number_of_medians_above_60_using_T30_to_T50_data_two_and_three_combined)) +
geom_boxplot()+ stat_n_text() +
ggtitle ('Does sex predict number of medians above 60% (T30-50, 2 and 3 combined)?') +
geom_text(x=1, y=1, label= glue::glue("p (ANOVA) = {round(p_value_ANOVA,4)},
p(Kruskal) = {round(p_value_kruskal,4)}"), size = 6, color = "black")
p
df$number_of_medians_above_60_using_T30_to_T50_data <-as.numeric(df$number_of_medians_above_60_using_T30_to_T50_data)
df$sex<-as.factor(df$sex)
fit <- aov(number_of_medians_above_60_using_T30_to_T50_data ~ sex, data=df)
p_value_ANOVA<- summary(fit)[[1]][["Pr(>F)"]][[1]]
kruskalfit<-kruskal.test(number_of_medians_above_60_using_T30_to_T50_data ~ sex, data=df)
p_value_kruskal<- kruskalfit$p.value
#Does number of medians above 60% (full 4 minutes) predict latency to enter correct side?
p <- ggplot(df, aes(x=sex, y=number_of_medians_above_60_using_T30_to_T50_data)) +
geom_boxplot()+ stat_n_text() +
ggtitle ('Does sex predict number of medians above 60% (T30-50, 2 and 3 combined)?') +
geom_text(x=1, y=1, label= glue::glue("p (ANOVA) = {round(p_value_ANOVA,4)},
p(Kruskal) = {round(p_value_kruskal,4)}"), size = 6, color = "black")
p
solvers = c(14,13)
nonsolvers = c(13,12)
detoursolvesex<-data.frame(solvers,nonsolvers)
chisq.test(detoursolvesex)
df.full
colnames(df.full)
mod<- lm(df$average_performance_across_all_9_testing_trials_using_T30_to_T50_data ~ df$unique_zones_entered_full_4_minutes, na.rm = TRUE)
summary(mod)
number <- df %>% filter(!is.na(average_performance_across_all_9_testing_trials_using_T30_to_T50_data)) %>% filter(!is.na(unique_zones_entered_full_4_minutes)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df, aes(unique_zones_entered_full_4_minutes, average_performance_across_all_9_testing_trials_using_T30_to_T50_data))
p + geom_point(size = 4) +
theme(text = element_text(size=10)) +
annotate("text", x=6, y=0.2, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "unique_zones_entered_full_4_minutes",y="average_performance_across_all_9_testing_trials
_using_T30_to_T50_data") +
ggtitle ("Does average number of unique zones visited predict average performance (T30 to T50)?") +
geom_smooth(method = "lm")
mod<- lm(df.females$average_performance_across_all_9_testing_trials_using_T30_to_T50_data ~ df.females$unique_zones_entered_full_4_minutes, na.rm = TRUE)
summary(mod)
number <- df.females %>% filter(!is.na(average_performance_across_all_9_testing_trials_using_T30_to_T50_data)) %>% filter(!is.na(unique_zones_entered_full_4_minutes)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df.females, aes(unique_zones_entered_full_4_minutes, average_performance_across_all_9_testing_trials_using_T30_to_T50_data))
p + geom_point(size = 4, color = "red") +
theme(text = element_text(size=10)) +
annotate("text", x=6, y=0.4, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "unique_zones_entered_full_4_minutes",y="average_performance_across_all_9_testing_trials
_using_T30_to_T50_data") +
ggtitle ("Does aaverage number of unique zones visited predict average performance (T30 to T50) FEMALE ONLY?") +
geom_smooth(method = "lm")
mod<- lm(df.females$average_performance_across_all_9_testing_trials_using_T30_to_T50_data ~ df.females$unique_zones_entered_full_4_minutes, na.rm = TRUE)
summary(mod)
number <- df.females %>% filter(!is.na(average_performance_across_all_9_testing_trials_using_T30_to_T50_data)) %>% filter(!is.na(unique_zones_entered_full_4_minutes)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df.females, aes(unique_zones_entered_full_4_minutes, average_performance_across_all_9_testing_trials_using_T30_to_T50_data))
p + geom_point(size = 4, color = "red") +
theme(text = element_text(size=10)) +
annotate("text", x=6, y=0.4, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "unique_zones_entered_full_4_minutes",y="average_performance_across_all_9_testing_trials
_using_T30_to_T50_data") +
ggtitle ("Does aaverage number of unique zones visited predict average performance (T30 to T50)
FEMALE ONLY?") +
geom_smooth(method = "lm")
#Does average number of unique zones visited predict average performance (T30 to T50) MALE ONLY?
mod<- lm(df.males$average_performance_across_all_9_testing_trials_using_T30_to_T50_data ~ df.males$unique_zones_entered_full_4_minutes, na.rm = TRUE)
summary(mod)
number <- df.males %>% filter(!is.na(average_performance_across_all_9_testing_trials_using_T30_to_T50_data)) %>% filter(!is.na(unique_zones_entered_full_4_minutes)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df.males, aes(unique_zones_entered_full_4_minutes, average_performance_across_all_9_testing_trials_using_T30_to_T50_data))
p + geom_point(size = 4, color = "blue") +
theme(text = element_text(size=10)) +
annotate("text", x=6, y=0.4, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "unique_zones_entered_full_4_minutes",y="average_performance_across_all_9_testing_trials
_using_T30_to_T50_data") +
ggtitle ("Does average number of unique zones visited predict average performance (T30 to T50) MALE ONLY?") +
geom_smooth(method = "lm")
#Does sex predict average number of unique zones entered?
#This is a wilcoxon rank sum test
test<-t.test(df$unique_zones_entered_full_4_minutes~df$sex)
p_value_t<- test %>% broom::tidy() %>% select(p.value) %>% unlist
wilcox_test<-wilcox.test(df$unique_zones_entered_full_4_minutes~ df$sex)
wilcox_test$estimate
p_value_wilcox<-wilcox_test$p.value
p <- ggplot(df, aes(x=sex, y=unique_zones_entered_full_4_minutes)) +
geom_boxplot()+ stat_n_text() +
geom_text(x=1,y=3, label= glue::glue("p (t-test)= {round(p_value_t,4)},
p(wilcox) = {round(p_value_wilcox,4)}"), size = 6, color = "black")
p +  ggtitle ("Does sex predict average number of
unique zones entered(exploration)?")
#Does learning category predict average number of unique zones entered?
#This is a wilcoxon rank sum test
test<-t.test(df$unique_zones_entered_full_4_minutes~df$did_fish_have_a_median_above_60)
p_value_t<- test %>% broom::tidy() %>% select(p.value) %>% unlist
wilcox_test<-wilcox.test(df$unique_zones_entered_full_4_minutes~ df$did_fish_have_a_median_above_60)
wilcox_test$estimate
p_value_wilcox<-wilcox_test$p.value
p <- ggplot(df, aes(x=did_fish_have_a_median_above_60, y=unique_zones_entered_full_4_minutes)) +
geom_boxplot()+ stat_n_text() +
geom_text(x=1,y=3, label= glue::glue("p (t-test)= {round(p_value_t,4)},
p(wilcox) = {round(p_value_wilcox,4)}"), size = 6, color = "black")
p +  ggtitle ("Does learning catefory predict average number of
unique zones entered(exploration)?")
#Does learning category predict average number of unique zones entered?
#This is a wilcoxon rank sum test
df$did_fish_have_a_median_above_60<-as.factor(df$did_fish_have_a_median_above_60)
test<-t.test(df$unique_zones_entered_full_4_minutes~df$did_fish_have_a_median_above_60)
p_value_t<- test %>% broom::tidy() %>% select(p.value) %>% unlist
wilcox_test<-wilcox.test(df$unique_zones_entered_full_4_minutes~ df$did_fish_have_a_median_above_60)
wilcox_test$estimate
p_value_wilcox<-wilcox_test$p.value
p <- ggplot(df, aes(x=did_fish_have_a_median_above_60, y=unique_zones_entered_full_4_minutes)) +
geom_boxplot()+ stat_n_text() +
geom_text(x=1,y=3, label= glue::glue("p (t-test)= {round(p_value_t,4)},
p(wilcox) = {round(p_value_wilcox,4)}"), size = 6, color = "black")
p +  ggtitle ("Does learning catefory predict average number of
unique zones entered(exploration)?")
colnames(df)
df$number_of_medians_above_60_using_T30_to_T50_data<-as.factor(df$number_of_medians_above_60_using_T30_to_T50_data)
test<-t.test(df$unique_zones_entered_full_4_minutes~df$number_of_medians_above_60_using_T30_to_T50_data)
#Does learning category predict average number of unique zones entered?
df$number_of_medians_above_60_using_T30_to_T50_data<-as.factor(df$number_of_medians_above_60_using_T30_to_T50_data)
fit <- aov(unique_zones_entered_full_4_minutes ~ number_of_medians_above_60_using_T30_to_T50_data, data=df)
p_value_ANOVA<- summary(fit)[[1]][["Pr(>F)"]][[1]]
df$order<-as.factor(df$order)
kruskalfit<-kruskal.test(unique_zones_entered_full_4_minutes ~ number_of_medians_above_60_using_T30_to_T50_data, data=df)
p_value_kruskal<- kruskalfit$p.value
df$number_of_medians_above_60_using_T30_to_T50_data<-as.factor(df$number_of_medians_above_60_using_T30_to_T50_data)
fit <- aov(unique_zones_entered_full_4_minutes ~ number_of_medians_above_60_using_T30_to_T50_data, data=df)
p_value_ANOVA<- summary(fit)[[1]][["Pr(>F)"]][[1]]
df$order<-as.factor(df$order)
kruskalfit<-kruskal.test(unique_zones_entered_full_4_minutes ~ number_of_medians_above_60_using_T30_to_T50_data, data=df)
p_value_kruskal<- kruskalfit$p.value
p <- ggplot(df, aes(x=number_of_medians_above_60_using_T30_to_T50_data, y=unique_zones_entered_full_4_minutes)) +
geom_boxplot()+ stat_n_text() +
p +  ggtitle ("Does order predict average performance over the full 4 minutes?")+
geom_text(x=3, y=0.2, label= glue::glue("p (ANOVA) = {round(p_value_ANOVA,4)},
p(Kruskal) = {round(p_value_kruskal,4)}"), size = 6, color = "black")
df$number_of_medians_above_60_using_T30_to_T50_data<-as.factor(df$number_of_medians_above_60_using_T30_to_T50_data)
fit <- aov(unique_zones_entered_full_4_minutes ~ number_of_medians_above_60_using_T30_to_T50_data, data=df)
p_value_ANOVA<- summary(fit)[[1]][["Pr(>F)"]][[1]]
df$order<-as.factor(df$order)
kruskalfit<-kruskal.test(unique_zones_entered_full_4_minutes ~ number_of_medians_above_60_using_T30_to_T50_data, data=df)
p_value_kruskal<- kruskalfit$p.value
p <- ggplot(df, aes(x=number_of_medians_above_60_using_T30_to_T50_data, y=unique_zones_entered_full_4_minutes)) +
geom_boxplot()+ stat_n_text()
p +  ggtitle ("Does order predict average performance over the full 4 minutes?")+
geom_text(x=1, y=1, label= glue::glue("p (ANOVA) = {round(p_value_ANOVA,4)},
p(Kruskal) = {round(p_value_kruskal,4)}"), size = 6, color = "black")
df$number_of_medians_above_60_using_T30_to_T50_data<-as.factor(df$number_of_medians_above_60_using_T30_to_T50_data)
fit <- aov(unique_zones_entered_full_4_minutes ~ number_of_medians_above_60_using_T30_to_T50_data, data=df)
p_value_ANOVA<- summary(fit)[[1]][["Pr(>F)"]][[1]]
df$order<-as.factor(df$order)
kruskalfit<-kruskal.test(unique_zones_entered_full_4_minutes ~ number_of_medians_above_60_using_T30_to_T50_data, data=df)
p_value_kruskal<- kruskalfit$p.value
p <- ggplot(df, aes(x=number_of_medians_above_60_using_T30_to_T50_data, y=unique_zones_entered_full_4_minutes)) +
geom_boxplot()+ stat_n_text()
p +  ggtitle ("Does order predict average performance over the full 4 minutes?")+
geom_text(x=2, y=2, label= glue::glue("p (ANOVA) = {round(p_value_ANOVA,4)},
p(Kruskal) = {round(p_value_kruskal,4)}"), size = 6, color = "black")
df$number_of_medians_above_60_using_T30_to_T50_data<-as.factor(df$number_of_medians_above_60_using_T30_to_T50_data)
fit <- aov(unique_zones_entered_full_4_minutes ~ number_of_medians_above_60_using_T30_to_T50_data, data=df)
p_value_ANOVA<- summary(fit)[[1]][["Pr(>F)"]][[1]]
df$order<-as.factor(df$order)
kruskalfit<-kruskal.test(unique_zones_entered_full_4_minutes ~ number_of_medians_above_60_using_T30_to_T50_data, data=df)
p_value_kruskal<- kruskalfit$p.value
p <- ggplot(df, aes(x=number_of_medians_above_60_using_T30_to_T50_data, y=unique_zones_entered_full_4_minutes)) +
geom_boxplot()+ stat_n_text()
p +  ggtitle ("Does order predict average performance over the full 4 minutes?")+
geom_text(x=2, y=4, label= glue::glue("p (ANOVA) = {round(p_value_ANOVA,4)},
p(Kruskal) = {round(p_value_kruskal,4)}"), size = 6, color = "black")
colnames(df)
mod<- lm(df$average_latency_to_enter_correct_side ~ df$unique_zones_entered_full_4_minutes, na.rm = TRUE)
summary(mod)
number <- df %>% filter(!is.na(average_latency_to_enter_correct_side)) %>% filter(!is.na(unique_zones_entered_full_4_minutes)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df, aes(unique_zones_entered_full_4_minutes, average_latency_to_enter_correct_side))
p + geom_point(size = 4) +
theme(text = element_text(size=10)) +
annotate("text", x=6, y=0.2, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "unique_zones_entered_full_4_minutes",y="average_performance_across_all_9_testing_trials
_using_T30_to_T50_data") +
ggtitle ("Does average number of unique zones visited predict average performance (T30 to T50)?") +
geom_smooth(method = "lm")
mod<- lm(df.females$average_latency_to_enter_correct_side ~ df.females$unique_zones_entered_full_4_minutes, na.rm = TRUE)
summary(mod)
number <- df.females %>% filter(!is.na(average_latency_to_enter_correct_side)) %>% filter(!is.na(unique_zones_entered_full_4_minutes)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df.females, aes(unique_zones_entered_full_4_minutes, average_latency_to_enter_correct_side))
p + geom_point(size = 4, color = "red") +
theme(text = element_text(size=10)) +
annotate("text", x=6, y=0.4, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "unique_zones_entered_full_4_minutes",y="average_performance_across_all_9_testing_trials
_using_T30_to_T50_data") +
ggtitle ("Does aaverage number of unique zones visited predict average performance (T30 to T50)
FEMALE ONLY?") +
geom_smooth(method = "lm")
mod<- lm(df.males$average_latency_to_enter_correct_side ~ df.males$unique_zones_entered_full_4_minutes, na.rm = TRUE)
summary(mod)
number <- df.males %>% filter(!is.na(average_latency_to_enter_correct_side)) %>% filter(!is.na(unique_zones_entered_full_4_minutes)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df.males, aes(unique_zones_entered_full_4_minutes, average_latency_to_enter_correct_side))
p + geom_point(size = 4, color = "blue") +
theme(text = element_text(size=10)) +
annotate("text", x=6, y=0.4, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "unique_zones_entered_full_4_minutes",y="average_performance_across_all_9_testing_trials
_using_T30_to_T50_data") +
ggtitle ("Does average number of unique zones visited predict average performance (T30 to T50) MALE ONLY?") +
geom_smooth(method = "lm")
colnames(df)
mod<- lm(df$average_latency_to_enter_correct_side ~ df$unique_zones_entered_full_4_minutes, na.rm = TRUE)
summary(mod)
number <- df %>% filter(!is.na(average_latency_to_enter_correct_side)) %>% filter(!is.na(unique_zones_entered_full_4_minutes)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df, aes(unique_zones_entered_full_4_minutes, average_latency_to_enter_correct_side))
p + geom_point(size = 4) +
theme(text = element_text(size=10)) +
annotate("text", x=6, y=0.2, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "unique_zones_entered_full_4_minutes",y="average_performance_across_all_9_testing_trials
_using_T30_to_T50_data") +
ggtitle ("Does average number of unique zones visited predict average latency to enter correct side?") +
geom_smooth(method = "lm")
mod<- lm(df.females$average_latency_to_enter_correct_side ~ df.females$unique_zones_entered_full_4_minutes, na.rm = TRUE)
summary(mod)
number <- df.females %>% filter(!is.na(average_latency_to_enter_correct_side)) %>% filter(!is.na(unique_zones_entered_full_4_minutes)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df.females, aes(unique_zones_entered_full_4_minutes, average_latency_to_enter_correct_side))
p + geom_point(size = 4, color = "red") +
theme(text = element_text(size=10)) +
annotate("text", x=6, y=0.4, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "unique_zones_entered_full_4_minutes",y="average_performance_across_all_9_testing_trials
_using_T30_to_T50_data") +
ggtitle ("Does aaverage number of unique zones visited predict average latency to enter correct side
FEMALE ONLY?") +
geom_smooth(method = "lm")
mod<- lm(df.males$average_latency_to_enter_correct_side ~ df.males$unique_zones_entered_full_4_minutes, na.rm = TRUE)
summary(mod)
number <- df.males %>% filter(!is.na(average_latency_to_enter_correct_side)) %>% filter(!is.na(unique_zones_entered_full_4_minutes)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df.males, aes(unique_zones_entered_full_4_minutes, average_latency_to_enter_correct_side))
p + geom_point(size = 4, color = "blue") +
theme(text = element_text(size=10)) +
annotate("text", x=6, y=0.4, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "unique_zones_entered_full_4_minutes",y="average_performance_across_all_9_testing_trials
_using_T30_to_T50_data") +
ggtitle ("Does average number of unique zones visited predict average latency to enter correct side MALE ONLY?") +
geom_smooth(method = "lm")
mod<- lm(df$average_reaction_time ~ df$unique_zones_entered_full_4_minutes, na.rm = TRUE)
summary(mod)
number <- df %>% filter(!is.na(average_reaction_time)) %>% filter(!is.na(unique_zones_entered_full_4_minutes)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df, aes(unique_zones_entered_full_4_minutes, average_reaction_time))
p + geom_point(size = 4) +
theme(text = element_text(size=10)) +
annotate("text", x=6, y=0.2, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "unique_zones_entered_full_4_minutes",y="average_performance_across_all_9_testing_trials
_using_T30_to_T50_data") +
ggtitle ("Does average number of unique zones visited predict average reaction time?") +
geom_smooth(method = "lm")
mod<- lm(df.females$average_reaction_time ~ df.females$unique_zones_entered_full_4_minutes, na.rm = TRUE)
summary(mod)
number <- df.females %>% filter(!is.na(average_reaction_time)) %>% filter(!is.na(unique_zones_entered_full_4_minutes)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df.females, aes(unique_zones_entered_full_4_minutes, average_reaction_time))
p + geom_point(size = 4, color = "red") +
theme(text = element_text(size=10)) +
annotate("text", x=6, y=0.4, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "unique_zones_entered_full_4_minutes",y="average_performance_across_all_9_testing_trials
_using_T30_to_T50_data") +
ggtitle ("Does aaverage number of unique zones visited predict average reaction time
FEMALE ONLY?") +
geom_smooth(method = "lm")
mod<- lm(df.males$average_reaction_time ~ df.males$unique_zones_entered_full_4_minutes, na.rm = TRUE)
summary(mod)
number <- df.males %>% filter(!is.na(average_reaction_time)) %>% filter(!is.na(unique_zones_entered_full_4_minutes)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df.males, aes(unique_zones_entered_full_4_minutes, average_reaction_time))
p + geom_point(size = 4, color = "blue") +
theme(text = element_text(size=10)) +
annotate("text", x=6, y=0.4, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "unique_zones_entered_full_4_minutes",y="average_performance_across_all_9_testing_trials
_using_T30_to_T50_data") +
ggtitle ("Does average number of unique zones visited predict average reaction time
MALE ONLY?") +
geom_smooth(method = "lm")
mod<-lm(df$average_performance_across_all_9_testing_trials_using_T30_to_T50_data ~ df$standard_length * df$sex)
number <- df %>% filter(!is.na(average_performance_across_all_9_testing_trials_using_T30_to_T50_data)) %>% filter(!is.na(standard_length)) %>% nrow
p_value<- coef(summary(mod))%>%as.list()
p_value<-p_value[[16]]
p <- ggplot(df, aes(standard_length, average_performance_across_all_9_testing_trials_using_T30_to_T50_data, color = sex))
p + geom_point(size = 4) +
theme(text = element_text(size=10)) +
annotate("text", x=1600, y=0.2, label= glue::glue("p (interaction) = {round(p_value,4)}
n = {number}"), size = 6, color = "black") +
labs(x= "standard_length",y="average_performance_across_all_9_testing_trials_
using_T30_to_T50_data") +
ggtitle ("Does size/age predict average performance(T30 to T50)? separated by sex") +
geom_smooth(method = "lm")
mod<- lm(df.females$average_latency_to_enter_correct_side ~ df.females$standard_length, na.rm = TRUE)
summary(mod)
number <- df.females %>% filter(!is.na(average_latency_to_enter_correct_side)) %>% filter(!is.na(standard_length)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df.females, aes(standard_length, average_latency_to_enter_correct_side))
p + geom_point(size = 4) +
theme(text = element_text(size=10)) +
annotate("text", x=1800, y=75, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "red") +
labs(x= "standard_length",y="average_latency_to_enter_correct_side") +
ggtitle ("Does size/age predict average latency to enter correct side?
female only") +
geom_smooth(method = "lm")
mod<- lm(df.females$average_latency_to_enter_correct_side ~ df.females$standard_length, na.rm = TRUE)
summary(mod)
number <- df.females %>% filter(!is.na(average_latency_to_enter_correct_side)) %>% filter(!is.na(standard_length)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df.females, aes(standard_length, average_latency_to_enter_correct_side))
p + geom_point(size = 4, color = "red") +
theme(text = element_text(size=10)) +
annotate("text", x=1800, y=75, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "standard_length",y="average_latency_to_enter_correct_side") +
ggtitle ("Does size/age predict average latency to enter correct side?
female only") +
geom_smooth(method = "lm")
mod<- lm(df.males$average_latency_to_enter_correct_side ~ df.males$standard_length, na.rm = TRUE)
summary(mod)
number <- df.males %>% filter(!is.na(average_latency_to_enter_correct_side)) %>% filter(!is.na(standard_length)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df.males, aes(standard_length, average_latency_to_enter_correct_side))
p + geom_point(size = 4, color = "blue") +
theme(text = element_text(size=10)) +
annotate("text", x=1800, y=75, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "standard_length",y="average_latency_to_enter_correct_side") +
ggtitle ("Does size/age predict average latency to enter correct side?
male only") +
geom_smooth(method = "lm")
colnames(f)
colnames(df)
#Does size/age predict average number of entries? FEMALE ONLY
mod<- lm(df.females$average_number_of_entries_full_4_minutes ~ df.females$standard_length, na.rm = TRUE)
summary(mod)
number <- df.females %>% filter(!is.na(average_number_of_entries_full_4_minutes)) %>% filter(!is.na(standard_length)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df.females, aes(standard_length, average_number_of_entries_full_4_minutes))
p + geom_point(size = 4, color = "red") +
theme(text = element_text(size=10)) +
annotate("text", x=1800, y=75, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "standard_length",y="average_number_of_entries_full_4_minutes") +
ggtitle ("Does size/age predict average number of entries?
female only") +
geom_smooth(method = "lm")
mod<- lm(df.males$average_number_of_entries_full_4_minutes ~ df.males$standard_length, na.rm = TRUE)
summary(mod)
number <- df.males %>% filter(!is.na(average_number_of_entries_full_4_minutes)) %>% filter(!is.na(standard_length)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df.males, aes(standard_length, average_number_of_entries_full_4_minutes))
p + geom_point(size = 4, color = "blue") +
theme(text = element_text(size=10)) +
annotate("text", x=1800, y=75, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "standard_length",y="average_number_of_entries_full_4_minutes") +
ggtitle ("Does size/age predict average number of entries?
male only") +
geom_smooth(method = "lm")
colnames(df)
mod<- lm(df.females$unique_zones_entered_full_4_minutes ~ df.females$standard_length, na.rm = TRUE)
summary(mod)
number <- df.females %>% filter(!is.na(unique_zones_entered_full_4_minutes)) %>% filter(!is.na(standard_length)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df.females, aes(standard_length, unique_zones_entered_full_4_minutes))
p + geom_point(size = 4, color = "red") +
theme(text = element_text(size=10)) +
annotate("text", x=1800, y=75, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "standard_length",y="unique_zones_entered_full_4_minutes") +
ggtitle ("Does size/age predict average number of unique zones entered?
female only") +
geom_smooth(method = "lm")
mod<- lm(df.females$unique_zones_entered_full_4_minutes ~ df.females$standard_length, na.rm = TRUE)
summary(mod)
number <- df.females %>% filter(!is.na(unique_zones_entered_full_4_minutes)) %>% filter(!is.na(standard_length)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df.females, aes(standard_length, unique_zones_entered_full_4_minutes))
p + geom_point(size = 4, color = "red") +
theme(text = element_text(size=10)) +
annotate("text", x=5, y=75, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "standard_length",y="unique_zones_entered_full_4_minutes") +
ggtitle ("Does size/age predict average number of unique zones entered?
female only") +
geom_smooth(method = "lm")
mod<- lm(df.females$unique_zones_entered_full_4_minutes ~ df.females$standard_length, na.rm = TRUE)
summary(mod)
number <- df.females %>% filter(!is.na(unique_zones_entered_full_4_minutes)) %>% filter(!is.na(standard_length)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df.females, aes(standard_length, unique_zones_entered_full_4_minutes))
p + geom_point(size = 4, color = "red") +
theme(text = element_text(size=10)) +
annotate("text", x=2500, y=8, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "standard_length",y="unique_zones_entered_full_4_minutes") +
ggtitle ("Does size/age predict average number of unique zones entered?
female only") +
geom_smooth(method = "lm")
mod<- lm(df.males$unique_zones_entered_full_4_minutes ~ df.males$standard_length, na.rm = TRUE)
summary(mod)
number <- df.males %>% filter(!is.na(unique_zones_entered_full_4_minutes)) %>% filter(!is.na(standard_length)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df.males, aes(standard_length, unique_zones_entered_full_4_minutes))
p + geom_point(size = 4, color = "blue") +
theme(text = element_text(size=10)) +
annotate("text", x=1800, y=8, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "standard_length",y="unique_zones_entered_full_4_minutes") +
ggtitle ("Does size/age predict average number of unique zones entered?
male only") +
geom_smooth(method = "lm")
mod<- lm(df.females$average_reaction_time ~ df.females$standard_length, na.rm = TRUE)
summary(mod)
number <- df.females %>% filter(!is.na(average_reaction_time)) %>% filter(!is.na(standard_length)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df.females, aes(standard_length, average_reaction_time))
p + geom_point(size = 4, color = "red") +
theme(text = element_text(size=10)) +
annotate("text", x=2500, y=8, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "standard_length",y="average_reaction_time") +
ggtitle ("Does size/age predict average reaction time?
female only") +
geom_smooth(method = "lm")
mod<- lm(df.males$average_reaction_time ~ df.males$standard_length, na.rm = TRUE)
summary(mod)
number <- df.males %>% filter(!is.na(average_reaction_time)) %>% filter(!is.na(standard_length)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df.males, aes(standard_length, average_reaction_time))
p + geom_point(size = 4, color = "blue") +
theme(text = element_text(size=10)) +
annotate("text", x=1800, y=8, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "standard_length",y="average_reaction_time") +
ggtitle ("Does size/age predict average reaction time?
male only") +
geom_smooth(method = "lm")
