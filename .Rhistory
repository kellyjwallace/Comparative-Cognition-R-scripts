geom_smooth(method = "lm")
mod<- lm(df$average_latency_to_enter_correct_side_filtered_just_correct_choice ~ df$average_reaction_time, na.rm = TRUE)
summary(mod)
number <- df %>% filter(!is.na(average_latency_to_enter_correct_side_filtered_just_correct_choice)) %>% filter(!is.na(average_reaction_time)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df, aes(average_reaction_time, average_latency_to_enter_correct_side_filtered_just_correct_choice))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=10, y=0.2, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "average_reaction_time",y="average_latency_to_enter_correct_side(filtered)") +
ggtitle ("Does average reaction time predict latency to enter correct side? (filtered)") +
geom_smooth(method = "lm")
mod<-lm(df$average_latency_to_enter_correct_side_filtered_just_correct_choice ~ df$average_reaction_time * df$sex)
number <- df %>% filter(!is.na(average_latency_to_enter_correct_side_filtered_just_correct_choice)) %>% filter(!is.na(average_reaction_time)) %>% nrow
p_value<- coef(summary(mod))%>%as.list()
p_value<-p_value[[16]]
p <- ggplot(df, aes(average_reaction_time, average_latency_to_enter_correct_side_filtered_just_correct_choice, color = sex))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=10, y=10, label= glue::glue("p (interaction)= {round(p_value,4)}
n = {number}"), size = 6, color = "black") +
labs(x= "average_reaction_time",y="average_latency_to_enter_correct_side_filtered_just_correct_choice") +
ggtitle ("Does average reaction time predict latency to enter correct side? (filtered)") +
geom_smooth(method = "lm")
test<-t.test(df$average_latency_to_enter_correct_side~df$sex)
p_value<- test %>% broom::tidy() %>% select(p.value) %>% unlist
p <- ggplot(df, aes(x=sex, y=average_latency_to_enter_correct_side)) +
geom_boxplot()+ stat_n_text() +
geom_text(x=1, y=0, label= glue::glue("p = {round(p_value,4)}"), size = 6, color = "black")
p +  ggtitle ("Does sex predict average latency to enter correct zone?")
test<-t.test(df$average_latency_to_enter_correct_side_filtered_just_correct_choice~df$sex)
p_value<- test %>% broom::tidy() %>% select(p.value) %>% unlist
p <- ggplot(df, aes(x=sex, y=average_latency_to_enter_correct_side_filtered_just_correct_choice)) +
geom_boxplot()+ stat_n_text() +
geom_text(x=1, y=0, label= glue::glue("p = {round(p_value,4)}"), size = 6, color = "black")
p +  ggtitle ("Does sex predict average latency to enter correct zone?(filtered)")
mod<- lm(df$average_latency_to_enter_correct_side ~ df$standard_length, na.rm = TRUE)
summary(mod)
number <- df %>% filter(!is.na(average_latency_to_enter_correct_side)) %>% filter(!is.na(standard_length)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df, aes(standard_length, average_latency_to_enter_correct_side))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=1800, y=75, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "standard_length",y="average_latency_to_enter_correct_side") +
ggtitle ("Does size/age predict average latency to enter correct side? SEXES COMBINED") +
geom_smooth(method = "lm")
mod<- lm(df$average_latency_to_enter_correct_side_filtered_just_correct_choice ~ df$standard_length, na.rm = TRUE)
summary(mod)
number <- df %>% filter(!is.na(average_latency_to_enter_correct_side_filtered_just_correct_choice)) %>% filter(!is.na(standard_length)) %>% nrow
p_value <- mod %>% broom::tidy() %>% filter(term != "(Intercept)") %>% select(p.value) %>% unlist
r_squared <- mod %>% broom::glance() %>% select(r.squared) %>% unlist
p <- ggplot(df, aes(standard_length, average_latency_to_enter_correct_side_filtered_just_correct_choice))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=1800, y=75, label= glue::glue("p = {round(p_value,4)}, R-squared:  {round(r_squared,3)}
n = {number}"), size = 6, color = "black") +
labs(x= "standard_length",y="average_latency_to_enter_correct_side_filtered_just_correct_choice") +
ggtitle ("Does size/age predict average latency to enter correct side (filtered)? SEXES COMBINED") +
geom_smooth(method = "lm")
```{r, echo=FALSE, message=FALSE, warning=FALSE}
mod<-lm(df$average_latency_to_enter_correct_side ~ df$standard_length * df$sex)
number <- df %>% filter(!is.na(average_latency_to_enter_correct_side)) %>% filter(!is.na(standard_length)) %>% nrow
p_value<- coef(summary(mod))%>%as.list()
p_value<-p_value[[16]]
p <- ggplot(df, aes(standard_length, average_latency_to_enter_correct_side, color = sex))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=1600, y=20, label= glue::glue("p (interaction) = {round(p_value,4)}
n = {number}"), size = 6, color = "black") +
labs(x= "standard_length",y="average_latency_to_enter_correct_side") +
ggtitle ("Does size/age predict average latency to enter correct side?") +
geom_smooth(method = "lm")
mod<-lm(df$average_latency_to_enter_correct_side_filtered_just_correct_choice ~ df$standard_length * df$sex)
number <- df %>% filter(!is.na(average_latency_to_enter_correct_side_filtered_just_correct_choice)) %>% filter(!is.na(standard_length)) %>% nrow
p_value<- coef(summary(mod))%>%as.list()
p_value<-p_value[[16]]
p <- ggplot(df, aes(standard_length, average_latency_to_enter_correct_side_filtered_just_correct_choice, color = sex))
p + geom_point(size = 3) +
theme(text = element_text(size=10)) +
annotate("text", x=1600, y=20, label= glue::glue("p (interaction) = {round(p_value,4)}
n = {number}"), size = 6, color = "black") +
labs(x= "standard_length",y="average_latency_to_enter_correct_side_filtered_just_correct_choice") +
ggtitle ("Does size/age predict average latency to enter correct side? (filtered)") +
geom_smooth(method = "lm")
fit <- aov(average_latency_to_enter_correct_side ~ order, data=df)
p_value<- summary(fit)[[1]][["Pr(>F)"]][[1]]
#Does order predict average latency to enter correct side?
p <- ggplot(df, aes(x=order, y=average_latency_to_enter_correct_side)) +
geom_boxplot()+ stat_n_text()
p +  ggtitle ("Does order predict average latency to enter correct side?")+
geom_text(x=3, y=0.2, label= glue::glue("p (ANOVA) = {round(p_value,4)}"), size = 6, color = "black")
fit <- aov(average_latency_to_enter_correct_side_filtered_just_correct_choice ~ order, data=df)
p_value<- summary(fit)[[1]][["Pr(>F)"]][[1]]
#Does order predict average latency to enter correct side(filtered)?
p <- ggplot(df, aes(x=order, y=average_latency_to_enter_correct_side_filtered_just_correct_choice)) +
geom_boxplot()+ stat_n_text()
p +  ggtitle ("Does order predict average latency to enter correct side?(filtered)")+
geom_text(x=3, y=0.2, label= glue::glue("p (ANOVA) = {round(p_value,4)}"), size = 6, color = "black")
library(ggplot2)
library(dplyr)
library(rmarkdown)
library(knitr)
library(readr)
library(utils)
hand_file_list <- list.files("C:/Users/Kelly/Desktop/Grad School/Cummings Lab/Comparative Cognition/numerosity cc score sheets", pattern = "*.csv")
track_file_list <-list.files("C:/Users/Kelly/Desktop/Grad School/Cummings Lab/Comparative Cognition/richie_cowlogs_from_tracker/use_for_comparison", pattern = "*.csv")
hand_test_column <- vector(length = length(hand_file_list))
df.hand<- data.frame(fishname = hand_test_column)
track_test_column <- vector(length = length(track_file_list))
df.track<- data.frame(vidID = track_test_column)
for(i in 1:length(hand_file_list)){
setwd("C:/Users/Kelly/Desktop/Grad School/Cummings Lab/Comparative Cognition/numerosity cc score sheets")
fil <- read_csv(hand_file_list[i], col_names = TRUE, col_types = NULL)
filename <- hand_file_list[i]
filename<-strsplit(filename, ".csv")[[1]][1]
filename
filename.scorername<-strsplit(filename, "_")[[1]][3]
filename.scorername
filename.fishname<-strsplit(filename, "_")[[1]][4]
filename.fishname<-gsub(" ", "", filename.fishname)
filename.fishname
filename.day<-strsplit(filename, "_")[[1]][5]
filename.day
filename.trial<-strsplit(filename, "_")[[1]][6]
filename.trial
filename.rightstim<-strsplit(filename, "_")[[1]][7]
filename.rightstim
filename.leftstim<-strsplit(filename, "_")[[1]][8]
filename.leftstim
filename.sex<-strsplit(filename, "_")[[1]][11]
filename.sex
filename.vidID<-combine(filename.fishname, filename.day, filename.trial)
filename.vidID<-paste(filename.vidID, collapse="")
filename.vidID<-tolower(filename.vidID)
fil$code<-gsub(" ", "", fil$code)
fil$code<-tolower(fil$code)
fil.entries<-nrow(fil)
change_index <- which(fil$time > 240.04)[1]-1
fil$time[change_index]<- 240.04
fil<-filter(fil, time <= 240.04)
fil<-mutate(fil, time.difference = -(time -lead(time)))
fil$time.difference <- replace(fil$time.difference, c(1), (fil$time[2])) #use only if you're starting at time = 0 seconds
fil.end<-fil[fil$code == "end",]
fil.center<-fil[fil$code == "center",]
fil.leftscreen<-fil[fil$code == "leftscreen",]
fil.rightscreen<-fil[fil$code == "rightscreen",]
fil.topleftthigmo<-fil[fil$code == "topleftthigmo",]
fil.toprightthigmo<-fil[fil$code == "toprightthigmo",]
fil.bottomleftthigmo<-fil[fil$code == "bottomleftthigmo",]
fil.bottomrightthigmo<-fil[fil$code == "bottomrightthigmo",]
fil.topmirror<-fil[fil$code == "topmirror",]
fil.bottommirror<-fil[fil$code == "bottommirror",]
df.hand$fishname[i]<-filename.fishname
df.hand$fishname[i]<-tolower(df.hand$fishname[i])
df.hand$sex[i]<- filename.sex
df.hand$hand_scorer_name[i]<-filename.scorername
df.hand$day[i]<-filename.day
df.hand$trial[i]<-filename.trial
df.hand$vidID[i]<-filename.vidID
df.hand$hand_number_entries[i]<-fil.entries -1
df.hand$hand_total_time[i]<-(sum(fil.end$time))
if(df.hand$hand_total_time[i] == 0){
df.hand$hand_total_time[i]<-240.04}
else{
df.hand$hand_total_time[i]<-df.hand$hand_total_time[i]}
df.hand$hand_seconds_center[i]<-sum(fil.center$time.difference)
df.hand$hand_seconds_leftscreen[i]<-sum(fil.leftscreen$time.difference)
df.hand$hand_seconds_rightscreen[i]<-sum(fil.rightscreen$time.difference)
df.hand$hand_seconds_center[is.na(df.hand$hand_seconds_center)] <- 0
df.hand$hand_seconds_leftscreen[is.na(df.hand$hand_seconds_leftscreen)] <- 0
df.hand$hand_seconds_rightscreen[is.na(df.hand$hand_seconds_rightscreen)] <- 0
topleft_thigmo_sum <- sum(fil.topleftthigmo$time.difference, na.rm = TRUE)
topright_thigmo_sum <- sum(fil.toprightthigmo$time.difference, na.rm = TRUE)
bottomleft_thigmo_sum <- sum(fil.bottomleftthigmo$time.difference, na.rm = TRUE)
bottomright_thigmo_sum <- sum(fil.bottomrightthigmo$time.difference, na.rm = TRUE)
top_mirror <- sum(fil.topmirror$time.difference, na.rm = TRUE)
bottom_mirror<- sum(fil.bottommirror$time.difference, na.rm = TRUE)
df.hand$hand_seconds_total_thigmo[i]<- (topleft_thigmo_sum + topright_thigmo_sum + bottomleft_thigmo_sum + bottomright_thigmo_sum)
df.hand$hand_seconds_total_mirror[i]<- (top_mirror + bottom_mirror)
}
View(df.hand)
for(i in 1:length(track_file_list)){
setwd("C:/Users/Kelly/Desktop/Grad School/Cummings Lab/Comparative Cognition/april_1_richie_cowlogs_from_tracker/use_for_comparison")
fil <- read_csv(track_file_list[i], col_names = TRUE, col_types = NULL)
filename <- track_file_list[i]
filename<-strsplit(filename, ".csv")[[1]][1]
filename
filename.fishname<-strsplit(filename, "_")[[1]][5]
filename.fishname<-gsub(" ", "", filename.fishname)
filename.fishname
filename.day<-strsplit(filename, "_")[[1]][6]
filename.day
filename.trial<-strsplit(filename, "_")[[1]][7]
filename.trial
filename.vidID<-combine(filename.fishname, filename.day, filename.trial)
filename.vidID<-paste(filename.vidID, collapse="")
filename.vidID<-tolower(filename.vidID)
fil$code<-gsub(" ", "", fil$code)
fil$code<-tolower(fil$code)
fil.entries<-nrow(fil)
fil<-mutate(fil, time.difference = -(time -lead(time)))
fil$time.difference <- replace(fil$time.difference, c(1), (fil$time[2])) #use only if you're starting at time = 0 seconds
fil.end<-fil[fil$code == "end",]
fil.center<-fil[fil$code == "center",]
fil.leftscreen<-fil[fil$code == "leftscreen",]
fil.rightscreen<-fil[fil$code == "rightscreen",]
fil.topleftthigmo<-fil[fil$code == "topleftthigmo",]
fil.toprightthigmo<-fil[fil$code == "toprightthigmo",]
fil.bottomleftthigmo<-fil[fil$code == "bottomleftthigmo",]
fil.bottomrightthigmo<-fil[fil$code == "bottomrightthigmo",]
fil.topmirror<-fil[fil$code == "topmirror",]
fil.bottommirror<-fil[fil$code == "bottommirror",]
df.track$vidID[i]<-tolower(filename.vidID)
df.track$track_number_entries[i]<-fil.entries -1
#df.track$track_total_time[i]<-fil.end[1]
df.track$track_total_time[i]<-sum(fil.end$time)
df.track$track_seconds_center[i]<-sum(fil.center$time.difference)
df.track$track_seconds_leftscreen[i]<-sum(fil.leftscreen$time.difference)
df.track$track_seconds_rightscreen[i]<-sum(fil.rightscreen$time.difference)
df.track$track_seconds_center[is.na(df.track$track_seconds_center)] <- 0
df.track$track_seconds_leftscreen[is.na(df.track$track_seconds_leftscreen)] <- 0
df.track$track_seconds_rightscreen[is.na(df.track$track_seconds_rightscreen)] <- 0
topleft_thigmo_sum <- sum(fil.topleftthigmo$time.difference, na.rm = TRUE)
topright_thigmo_sum <- sum(fil.toprightthigmo$time.difference, na.rm = TRUE)
bottomleft_thigmo_sum <- sum(fil.bottomleftthigmo$time.difference, na.rm = TRUE)
bottomright_thigmo_sum <- sum(fil.bottomrightthigmo$time.difference, na.rm = TRUE)
top_mirror <- sum(fil.topmirror$time.difference, na.rm = TRUE)
bottom_mirror<- sum(fil.bottommirror$time.difference, na.rm = TRUE)
df.track$track_seconds_total_thigmo[i]<- (topleft_thigmo_sum + topright_thigmo_sum + bottomleft_thigmo_sum + bottomright_thigmo_sum)
df.track$track_seconds_total_mirror[i]<- (top_mirror + bottom_mirror)
}
for(i in 1:length(track_file_list)){
setwd("C:/Users/Kelly/Desktop/Grad School/Cummings Lab/Comparative Cognition/richie_cowlogs_from_tracker/use_for_comparison")
fil <- read_csv(track_file_list[i], col_names = TRUE, col_types = NULL)
filename <- track_file_list[i]
filename<-strsplit(filename, ".csv")[[1]][1]
filename
filename.fishname<-strsplit(filename, "_")[[1]][5]
filename.fishname<-gsub(" ", "", filename.fishname)
filename.fishname
filename.day<-strsplit(filename, "_")[[1]][6]
filename.day
filename.trial<-strsplit(filename, "_")[[1]][7]
filename.trial
filename.vidID<-combine(filename.fishname, filename.day, filename.trial)
filename.vidID<-paste(filename.vidID, collapse="")
filename.vidID<-tolower(filename.vidID)
fil$code<-gsub(" ", "", fil$code)
fil$code<-tolower(fil$code)
fil.entries<-nrow(fil)
fil<-mutate(fil, time.difference = -(time -lead(time)))
fil$time.difference <- replace(fil$time.difference, c(1), (fil$time[2])) #use only if you're starting at time = 0 seconds
fil.end<-fil[fil$code == "end",]
fil.center<-fil[fil$code == "center",]
fil.leftscreen<-fil[fil$code == "leftscreen",]
fil.rightscreen<-fil[fil$code == "rightscreen",]
fil.topleftthigmo<-fil[fil$code == "topleftthigmo",]
fil.toprightthigmo<-fil[fil$code == "toprightthigmo",]
fil.bottomleftthigmo<-fil[fil$code == "bottomleftthigmo",]
fil.bottomrightthigmo<-fil[fil$code == "bottomrightthigmo",]
fil.topmirror<-fil[fil$code == "topmirror",]
fil.bottommirror<-fil[fil$code == "bottommirror",]
df.track$vidID[i]<-tolower(filename.vidID)
df.track$track_number_entries[i]<-fil.entries -1
#df.track$track_total_time[i]<-fil.end[1]
df.track$track_total_time[i]<-sum(fil.end$time)
df.track$track_seconds_center[i]<-sum(fil.center$time.difference)
df.track$track_seconds_leftscreen[i]<-sum(fil.leftscreen$time.difference)
df.track$track_seconds_rightscreen[i]<-sum(fil.rightscreen$time.difference)
df.track$track_seconds_center[is.na(df.track$track_seconds_center)] <- 0
df.track$track_seconds_leftscreen[is.na(df.track$track_seconds_leftscreen)] <- 0
df.track$track_seconds_rightscreen[is.na(df.track$track_seconds_rightscreen)] <- 0
topleft_thigmo_sum <- sum(fil.topleftthigmo$time.difference, na.rm = TRUE)
topright_thigmo_sum <- sum(fil.toprightthigmo$time.difference, na.rm = TRUE)
bottomleft_thigmo_sum <- sum(fil.bottomleftthigmo$time.difference, na.rm = TRUE)
bottomright_thigmo_sum <- sum(fil.bottomrightthigmo$time.difference, na.rm = TRUE)
top_mirror <- sum(fil.topmirror$time.difference, na.rm = TRUE)
bottom_mirror<- sum(fil.bottommirror$time.difference, na.rm = TRUE)
df.track$track_seconds_total_thigmo[i]<- (topleft_thigmo_sum + topright_thigmo_sum + bottomleft_thigmo_sum + bottomright_thigmo_sum)
df.track$track_seconds_total_mirror[i]<- (top_mirror + bottom_mirror)
}
View(df.track)
df.both<- left_join(df.hand, df.track, by = "vidID")
View(df.both)
for(i in 1:nrow(df.both)){
diff_number_entries<- df.both$hand_number_entries[i] - df.both$track_number_entries[i]
diff_total_time<- df.both$hand_total_time[i] - df.both$track_total_time[i]
diff_seconds_leftscreen<- df.both$hand_seconds_leftscreen[i] - df.both$track_seconds_leftscreen[i]
diff_seconds_rightscreen<- df.both$hand_seconds_rightscreen[i] - df.both$track_seconds_rightscreen[i]
diff_seconds_center<- df.both$hand_seconds_center[i] - df.both$track_seconds_center[i]
diff_seconds_total_thigmo<- df.both$hand_seconds_total_thigmo[i] - df.both$track_seconds_total_thigmo[i]
diff_seconds_total_mirror<- df.both$hand_seconds_total_mirror[i] - df.both$track_seconds_total_mirror[i]
if(is.na(diff_number_entries) == TRUE){
df.both$diff_number_entries[i]<-NA}
else{
df.both$diff_number_entries[i]<-diff_number_entries}
if(is.na(diff_total_time) == TRUE){
df.both$diff_total_time[i]<-NA}
else{
df.both$diff_total_time[i]<-diff_total_time}
if(is.na(diff_seconds_leftscreen) == TRUE){
df.both$diff_seconds_leftscreen[i]<-NA}
else{
df.both$diff_seconds_leftscreen[i]<-diff_seconds_leftscreen}
if(is.na(diff_seconds_rightscreen) == TRUE){
df.both$diff_seconds_rightscreen[i]<-NA}
else{
df.both$diff_seconds_rightscreen[i]<-diff_seconds_rightscreen}
if(is.na(diff_seconds_center) == TRUE){
df.both$diff_seconds_center[i]<-NA}
else{
df.both$diff_seconds_center[i]<-diff_seconds_center}
if(is.na(diff_seconds_total_thigmo) == TRUE){
df.both$diff_seconds_total_thigmo[i]<-NA}
else{
df.both$diff_seconds_total_thigmo[i]<-diff_seconds_total_thigmo}
if(is.na(diff_seconds_total_mirror) == TRUE){
df.both$diff_seconds_total_mirror[i]<-NA}
else{
df.both$diff_seconds_total_mirror[i]<-diff_seconds_total_mirror}
}
View(df.both)
df.both.male<-filter(df.both, df.both$sex == "M")
df.both.female<-filter(df.both, df.both$sex == "F")
for(i in 1:length(hand_file_list)){
setwd("C:/Users/Kelly/Desktop/Grad School/Cummings Lab/Comparative Cognition/numerosity cc score sheets")
fil <- read_csv(hand_file_list[i], col_names = TRUE, col_types = NULL)
filename <- hand_file_list[i]
filename<-strsplit(filename, ".csv")[[1]][1]
filename
filename.scorername<-strsplit(filename, "_")[[1]][3]
filename.scorername
filename.fishname<-strsplit(filename, "_")[[1]][4]
filename.fishname<-gsub(" ", "", filename.fishname)
filename.fishname
filename.day<-strsplit(filename, "_")[[1]][5]
filename.day
filename.trial<-strsplit(filename, "_")[[1]][6]
filename.trial
filename.rightstim<-strsplit(filename, "_")[[1]][7]
filename.rightstim
filename.leftstim<-strsplit(filename, "_")[[1]][8]
filename.leftstim
filename.sex<-strsplit(filename, "_")[[1]][11]
filename.sex
filename.vidID<-combine(filename.fishname, filename.day, filename.trial)
filename.vidID<-paste(filename.vidID, collapse="")
filename.vidID<-tolower(filename.vidID)
fil$code<-gsub(" ", "", fil$code)
fil$code<-tolower(fil$code)
fil.entries<-nrow(fil)
change_index <- which(fil$time > 240.04)[1]-1
fil$time[change_index]<- 240.04
fil<-filter(fil, time <= 240.04)
#COMMENT OUT if you are looking at T0-30!!!!!
change_index <- which(fil$time > 30)[1]-1
fil$time[change_index]<- 30
fil<-filter(fil, time >= 30)
fil<-mutate(fil, time.difference = -(time -lead(time)))
fil$time.difference <- replace(fil$time.difference, c(1), (fil$time[2])) #use only if you're starting at time = 0 seconds
fil.end<-fil[fil$code == "end",]
fil.center<-fil[fil$code == "center",]
fil.leftscreen<-fil[fil$code == "leftscreen",]
fil.rightscreen<-fil[fil$code == "rightscreen",]
fil.topleftthigmo<-fil[fil$code == "topleftthigmo",]
fil.toprightthigmo<-fil[fil$code == "toprightthigmo",]
fil.bottomleftthigmo<-fil[fil$code == "bottomleftthigmo",]
fil.bottomrightthigmo<-fil[fil$code == "bottomrightthigmo",]
fil.topmirror<-fil[fil$code == "topmirror",]
fil.bottommirror<-fil[fil$code == "bottommirror",]
df.hand$fishname[i]<-filename.fishname
df.hand$fishname[i]<-tolower(df.hand$fishname[i])
df.hand$sex[i]<- filename.sex
df.hand$hand_scorer_name[i]<-filename.scorername
df.hand$day[i]<-filename.day
df.hand$trial[i]<-filename.trial
df.hand$vidID[i]<-filename.vidID
df.hand$hand_number_entries[i]<-fil.entries -1
df.hand$hand_total_time[i]<-(sum(fil.end$time))
if(df.hand$hand_total_time[i] == 0){
df.hand$hand_total_time[i]<-240.04}
else{
df.hand$hand_total_time[i]<-df.hand$hand_total_time[i]}
df.hand$hand_seconds_center[i]<-sum(fil.center$time.difference)
df.hand$hand_seconds_leftscreen[i]<-sum(fil.leftscreen$time.difference)
df.hand$hand_seconds_rightscreen[i]<-sum(fil.rightscreen$time.difference)
df.hand$hand_seconds_center[is.na(df.hand$hand_seconds_center)] <- 0
df.hand$hand_seconds_leftscreen[is.na(df.hand$hand_seconds_leftscreen)] <- 0
df.hand$hand_seconds_rightscreen[is.na(df.hand$hand_seconds_rightscreen)] <- 0
topleft_thigmo_sum <- sum(fil.topleftthigmo$time.difference, na.rm = TRUE)
topright_thigmo_sum <- sum(fil.toprightthigmo$time.difference, na.rm = TRUE)
bottomleft_thigmo_sum <- sum(fil.bottomleftthigmo$time.difference, na.rm = TRUE)
bottomright_thigmo_sum <- sum(fil.bottomrightthigmo$time.difference, na.rm = TRUE)
top_mirror <- sum(fil.topmirror$time.difference, na.rm = TRUE)
bottom_mirror<- sum(fil.bottommirror$time.difference, na.rm = TRUE)
df.hand$hand_seconds_total_thigmo[i]<- (topleft_thigmo_sum + topright_thigmo_sum + bottomleft_thigmo_sum + bottomright_thigmo_sum)
df.hand$hand_seconds_total_mirror[i]<- (top_mirror + bottom_mirror)
}
View(df.hand)
df.both<- left_join(df.hand, df.track, by = "vidID")
View(df.both)
for(i in 1:nrow(df.both)){
diff_number_entries<- df.both$hand_number_entries[i] - df.both$track_number_entries[i]
diff_total_time<- df.both$hand_total_time[i] - df.both$track_total_time[i]
diff_seconds_leftscreen<- df.both$hand_seconds_leftscreen[i] - df.both$track_seconds_leftscreen[i]
diff_seconds_rightscreen<- df.both$hand_seconds_rightscreen[i] - df.both$track_seconds_rightscreen[i]
diff_seconds_center<- df.both$hand_seconds_center[i] - df.both$track_seconds_center[i]
diff_seconds_total_thigmo<- df.both$hand_seconds_total_thigmo[i] - df.both$track_seconds_total_thigmo[i]
diff_seconds_total_mirror<- df.both$hand_seconds_total_mirror[i] - df.both$track_seconds_total_mirror[i]
if(is.na(diff_number_entries) == TRUE){
df.both$diff_number_entries[i]<-NA}
else{
df.both$diff_number_entries[i]<-diff_number_entries}
if(is.na(diff_total_time) == TRUE){
df.both$diff_total_time[i]<-NA}
else{
df.both$diff_total_time[i]<-diff_total_time}
if(is.na(diff_seconds_leftscreen) == TRUE){
df.both$diff_seconds_leftscreen[i]<-NA}
else{
df.both$diff_seconds_leftscreen[i]<-diff_seconds_leftscreen}
if(is.na(diff_seconds_rightscreen) == TRUE){
df.both$diff_seconds_rightscreen[i]<-NA}
else{
df.both$diff_seconds_rightscreen[i]<-diff_seconds_rightscreen}
if(is.na(diff_seconds_center) == TRUE){
df.both$diff_seconds_center[i]<-NA}
else{
df.both$diff_seconds_center[i]<-diff_seconds_center}
if(is.na(diff_seconds_total_thigmo) == TRUE){
df.both$diff_seconds_total_thigmo[i]<-NA}
else{
df.both$diff_seconds_total_thigmo[i]<-diff_seconds_total_thigmo}
if(is.na(diff_seconds_total_mirror) == TRUE){
df.both$diff_seconds_total_mirror[i]<-NA}
else{
df.both$diff_seconds_total_mirror[i]<-diff_seconds_total_mirror}
}
View(df.both)
df.both.male<-filter(df.both, df.both$sex == "M")
df.both.female<-filter(df.both, df.both$sex == "F")
mean(df.both$diff_number_entries, na.rm = TRUE)
mean(df.both$diff_total_time, na.rm = TRUE)
mean(df.both$hand_total_time, na.rm = TRUE)
mean(df.both$diff_seconds_leftscreen, na.rm = TRUE)
mean(df.both$diff_seconds_rightscreen, na.rm = TRUE)
mean(df.both$diff_seconds_center, na.rm = TRUE)
mean(df.both$diff_seconds_total_thigmo, na.rm = TRUE)
mean(df.both$diff_seconds_total_mirror, na.rm = TRUE)
mean(df.both.female$diff_number_entries, na.rm = TRUE)
mean(df.both.female$diff_seconds_leftscreen, na.rm = TRUE)
mean(df.both.female$diff_seconds_rightscreen, na.rm = TRUE)
mean(df.both.female$diff_seconds_center, na.rm = TRUE)
mean(df.both.female$diff_seconds_total_thigmo, na.rm = TRUE)
mean(df.both.female$diff_seconds_total_mirror, na.rm = TRUE)
mean(df.both.male$diff_number_entries, na.rm = TRUE)
mean(df.both.male$diff_seconds_leftscreen, na.rm = TRUE)
mean(df.both.male$diff_seconds_rightscreen, na.rm = TRUE)
mean(df.both.male$diff_seconds_center, na.rm = TRUE)
mean(df.both.male$diff_seconds_total_thigmo, na.rm = TRUE)
mean(df.both.male$diff_seconds_total_mirror, na.rm = TRUE)
mean(abs(df.both$diff_number_entries), na.rm = TRUE)
mean(abs(df.both$diff_seconds_leftscreen), na.rm = TRUE)
mean(abs(df.both$diff_seconds_rightscreen), na.rm = TRUE)
mean(abs(df.both$diff_seconds_center), na.rm = TRUE)
mean(abs(df.both$diff_seconds_total_thigmo), na.rm = TRUE)
mean(abs(df.both$diff_seconds_total_mirror), na.rm = TRUE)
mean(abs(df.both$diff_number_entries), na.rm = TRUE)
mean(abs(df.both$diff_seconds_leftscreen), na.rm = TRUE)
mean(abs(df.both$diff_seconds_rightscreen), na.rm = TRUE)
mean(abs(df.both$diff_seconds_center), na.rm = TRUE)
mean(abs(df.both$diff_seconds_total_thigmo), na.rm = TRUE)
mean(abs(df.both$diff_seconds_total_mirror), na.rm = TRUE)
mean(abs(df.both.female$diff_number_entries), na.rm = TRUE)
mean(abs(df.both.female$diff_seconds_leftscreen), na.rm = TRUE)
mean(abs(df.both.female$diff_seconds_rightscreen), na.rm = TRUE)
mean(abs(df.both.female$diff_seconds_center), na.rm = TRUE)
mean(abs(df.both.female$diff_seconds_total_thigmo), na.rm = TRUE)
mean(abs(df.both.female$diff_seconds_total_mirror), na.rm = TRUE)
#now lets look just at the males, taking the ABSOLUTE difference
mean(abs(df.both.male$diff_number_entries), na.rm = TRUE)
mean(abs(df.both.male$diff_total_time), na.rm = TRUE)
mean(abs(df.both.male$hand_total_time), na.rm = TRUE)
mean(abs(df.both.male$diff_seconds_leftscreen), na.rm = TRUE)
mean(abs(df.both.male$diff_seconds_rightscreen), na.rm = TRUE)
mean(abs(df.both.male$diff_seconds_center), na.rm = TRUE)
mean(abs(df.both.male$diff_seconds_total_thigmo), na.rm = TRUE)
mean(abs(df.both.male$diff_seconds_total_mirror), na.rm = TRUE)
median(abs(df.both$diff_number_entries), na.rm = TRUE)
median(abs(df.both$diff_seconds_leftscreen), na.rm = TRUE)
median(abs(df.both$diff_seconds_rightscreen), na.rm = TRUE)
median(abs(df.both$diff_seconds_center), na.rm = TRUE)
median(abs(df.both$diff_seconds_total_thigmo), na.rm = TRUE)
median(abs(df.both$diff_seconds_total_mirror), na.rm = TRUE)
median(abs(df.both.female$diff_number_entries), na.rm = TRUE)
median(abs(df.both.female$diff_seconds_leftscreen), na.rm = TRUE)
median(abs(df.both.female$diff_seconds_rightscreen), na.rm = TRUE)
median(abs(df.both.female$diff_seconds_center), na.rm = TRUE)
median(abs(df.both.female$diff_seconds_total_thigmo), na.rm = TRUE)
median(abs(df.both.female$diff_seconds_total_mirror), na.rm = TRUE)
median(abs(df.both.male$diff_number_entries), na.rm = TRUE)
median(abs(df.both.male$diff_number_entries), na.rm = TRUE)
median(abs(df.both.male$diff_seconds_leftscreen), na.rm = TRUE)
median(abs(df.both.male$diff_seconds_rightscreen), na.rm = TRUE)
median(abs(df.both.male$diff_seconds_center), na.rm = TRUE)
median(abs(df.both.male$diff_seconds_total_thigmo), na.rm = TRUE)
median(abs(df.both.male$diff_seconds_total_mirror), na.rm = TRUE)
